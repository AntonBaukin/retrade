<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:fragment xmlns = 'http://www.w3.org/1999/xhtml'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'
   xmlns:co = 'http://java.sun.com/jsf/composite'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'
   xmlns:z  = 'uri:tverts.com'>

  <co:interface>

    <!--
         Page (not domain!) unique bind name of the component.
         Is also a global key in Ext.data.StoreManager.
    -->
    <co:attribute name = 'storeId' required = 'true'
      type = 'java.lang.String'/>

    <!--
         Assign the model to provide data for this store.
    -->
    <co:attribute name = 'modelView'
      type = 'com.tverts.faces.ModelView'/>

    <!--
         To provide data for the model instead of taking
         them from the Model View, set the name of Spring
         bean that implements Model Provider interface.
    -->
    <co:attribute name = 'modelProvider'
      type = 'java.lang.String'/>

    <co:attribute name = 'modelKey'
      type = 'java.lang.String'/>

    <!--
         If single Model Data Provider instance generates
         data of more than one distinct type, send this key
         as the HTTP request parameter.
    -->
    <co:attribute name = 'modelRequest'
      type = 'java.lang.String'/>

    <!--
         Specify the page size of the data returned.
         Zero values tells to use the server default
         for this Data Provider. Data Provider may
         also ignore this value or constrict it.
    -->

    <co:facet name = 'store-props'/>

    <!--
         Parameters of the Proxy created for this store.
         Leave this facet empty to use in-memory data proxy.
    -->
    <co:facet name = 'proxy-props'/>

  </co:interface>

  <co:implementation>

    <div id = "#{cc.clientId}-#{cc.attrs.storeId}-props" style = "display:none">
      <co:renderFacet name = "store-props"/>
    </div>

    <div id = "#{cc.clientId}-#{cc.attrs.storeId}-proxy-props" style = "display:none">
      <co:renderFacet name = "proxy-props"/>
    </div>

    <script type = "text/javascript">
    //<![CDATA[

    extjsf.domain('${extDom}').
      bind('#{cc.attrs.storeId}', new extjsf.StoreBind()).
      ids('#{cc.clientId}').parent('#{cc.parent.attrs.coid}').
      props({ autoLoad: true }).readPropsNode().
      props({ storeId: '#{cc.attrs.storeId}' }).
        nest('proxy', function(proxy, store)
        {
          //?: {empty proxy}
          if(!proxy.readPropsNode(true))
          {
            store.props({ autoLoad: false })
            return false
          }

          store.proxy = proxy

          if(ZeT.ises(proxy.$raw().type)) proxy.props({ type: 'ajax' })
          if((proxy.$raw().type === 'ajax') && ZeT.ises(proxy.$raw().url))
            proxy.props({ url: "${z:url('/model')}" })

          proxy.props('extra', {
            key      : '#{cc.attrs.modelKey}',
            viewKey  : '#{cc.attrs.modelView.modelKey}',
            provider : '#{cc.attrs.modelProvider}',
            request  : '#{cc.attrs.modelRequest}'
          })
        }).
      install()

    //]]>
    </script>
  </co:implementation>
</ui:fragment>