<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesStoreView}"/>

${v.checkModelRequestedWithRedirect}
${v.checkEntityRequested}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

<x:winmain coid = "${z:vid(v, 'root_panel')}">

  <script type = "text/javascript">

    extjsf.bind('winmain', '${rootView.extjsDomain}').
      component().setTitle('${z:jss(v.winmainTitleInfo)}')

  </script>

  <f:facet name = "toolbar-props">
    xtype: 'panel', bodyPadding: extjsf.pt(2),
    layout: {type: 'hbox', align: 'middle'},
    bodyCls: 'retrade-toolbar-panel'
  </f:facet>

  <!-- [toolbar -->

  <f:facet name = "toolbar">

    <!-- [close window button -->

    <x:component coid = "${z:vid(v, 'close_window')}">
      <f:facet name = "extjs-props">
        xtype: 'button', text: 'Закрыть',

        handler : function()
        {
          extjsf.bind('winmain', '${rootView.extjsDomain}').
            component().close()
        }

      </f:facet>
    </x:component>

    <!-- close window button] -->


    <x:component coid = "${z:vid(v, '_tb_fill_0')}">
      <f:facet name = "extjs-props">
        xtype: 'panel', flex: 1, frame: false, border: false,
        bodyCls: 'retrade-toolbar-panel'
      </f:facet>
    </x:component>


    <!-- [filter goods field -->

    <x:action-call coid = "${z:vid(v, 'search_goods_script')}"
      action = "#{v.doSearchGoods}">

      <f:facet name = "action-params">
        '${v.modelParam}': '${v.modelKeys}'
      </f:facet>
    </x:action-call>

    <x:text-field coid = "${z:vid(v, 'search_goods')}"
      value = "#{v.model.searchNames}">

      <f:facet name = "extjs-props">
        margin: extjsf.dpts(1, 0, 1, 4),
        width:  extjsf.ex(24)
      </f:facet>

      <f:facet name = "label-props">
        text: 'Поиск'
      </f:facet>
    </x:text-field>

    <script type = "text/javascript">
      //<![CDATA[

  extjsf.bind("${z:vid(v, 'search_goods')}", '${rootView.extjsDomain}').on('change', function(f)
  {
    var sv = ZeTS.trim(f.getValue());
    if(!f.extjsfBind) return; f.extjsfBind.searchValue = sv;

    var fn = function()
    {
      //?: {search string was changed} discard
      if(f.extjsfBind.searchValue != sv) return;

      extjsf.bindHandler("${z:vid(v, 'search_goods_script')}", '${rootView.extjsDomain}')({
        params: {searchGoods: sv}, success : function() {
          Ext.data.StoreManager.lookup("${z:vid(v, 'storeGoods')}").loadPage(1)
        }})
    }

    setTimeout(fn, 1000)
  })

      //]]>
    </script>

    <!-- filter goods field] -->

  </f:facet>

  <!-- toolbar] -->


  <!-- [goods table -->

  <x:data-store storeId = "${z:vid(v, 'storeGoods')}"
    modelView = "${v}" pageSize = "${v.model.dataLimit}">

    <f:facet name = "store-props">
      model: 'retrade.model.GoodUnitView', remoteSort: true,
      sorters: [{ property: 'goodName', direction: 'ASC' }]
    </f:facet>

    <f:facet name = "proxy-props">
      reader: ZeT.defined('retrade.readers.GoodUnitView')
    </f:facet>
  </x:data-store>

  <x:data-grid coid = "${z:vid(v, 'grid')}"
    storeId = "${z:vid(v, 'storeGoods')}">

    <f:facet name = "grid-props">
      region: 'center',
      columns: ZeT.defined('retrade.columns.GoodUnitStoreView'),
      selModel: extjsf.delayCreate('Ext.selection.RowModel', {mode: 'SINGLE'}),
      pager: true, sortableColumns: true
    </f:facet>
  </x:data-grid>

  <!-- goods table] -->

</x:winmain>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://tverts.com/retrade/webapp/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "true"/>
  </ui:define>
</ui:decorate>
</ui:component>