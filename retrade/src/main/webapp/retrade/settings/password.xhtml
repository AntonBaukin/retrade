<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesSettingsPasswordView}"/>

${v.checkModelRequestedWithRedirect}
${v.forceCheckSecure()}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

<x:winmain coid = "${z:vid(v, 'root_panel')}">

  <ui:fragment rendered = "${not v.model.creating}">
    <script type = "text/javascript">

    extjsf.bind('winmain', '${extDom}').
      co().setTitle("Логин и пароль п-ля '${z:jss(v.model.loginCode)}'")

    </script>
  </ui:fragment>

  <ui:fragment rendered = "${v.model.creating}">
    <script type = "text/javascript">

    extjsf.bind('winmain', '${extDom}').
      co().setTitle("Добавление пользователя")

    </script>
  </ui:fragment>


  <f:facet name = "toolbar-props">
    xtype: 'panel', bodyPadding: extjsf.pt(2),
    layout: {type: 'hbox', align: 'middle'},
    bodyCls: 'retrade-toolbar-panel'
  </f:facet>

  <!-- [toolbar -->

  <f:facet name = "toolbar">

    <!-- [cancel edit button -->

    <x:component coid = "${z:vid(v, 'close_window')}">
      <f:facet name = "extjs-props">
        xtype: 'button', text: 'Отмена',
        cls: 'ux-btn-red',

        handler : function()
        {
          var winmain = extjsf.bind('winmain', '${extDom}');

          winmain.passwordEdit = { cancelled: true };
          winmain.co().close()
        }

      </f:facet>
    </x:component>

    <!-- cancel edit button] -->


    <x:component coid = "${z:vid(v, '_tb_fill_0')}">
      <f:facet name = "extjs-props">
        xtype: 'panel', flex: 1, frame: false, border: false,
        bodyCls: 'retrade-toolbar-panel'
      </f:facet>
    </x:component>


    <!-- [commit button -->

    <x:component coid = "${z:vid(v, 'submit')}">
      <f:facet name = "extjs-props">
        xtype:'button', text: 'Сохранить',
        cls: 'ux-btn-green'
      </f:facet>
    </x:component>

    <!-- commit button] -->

  </f:facet>

  <!-- toolbar] -->


  <!-- [login and password form -->

  <x:component coid = "${z:vid(v, 'form_layout')}">
    <f:facet name = "extjs-props">
      xtype: 'panel', border: false, frame: false,
      layout: { type: 'table', columns: 2},
      bodyCls: 'retrade-back-panel', bodyPadding: extjsf.pt(2)
    </f:facet>

    <x:text-field coid = "${z:vid(v, 'login')}"
      value = "#{v.model.loginCode}">

      <f:facet name = "label-props">
        text: 'Логин',
        margin: extjsf.pts(2, 6, 2, 0),
        cls: 'retrade-form-label-cell'
      </f:facet>

      <f:facet name = "extjs-props">

        margin: extjsf.pts(2, 0, 2, 0),
        cellCls: 'retrade-table-cell-100pc',
        fieldCls: 'x-form-field retrade-width-100pc', width: '100%',
        disabled: ${v.loginDisabled},
        allowBlank: false, validator: function()
        {
          return extjsf.bind("${z:vid(v, 'login')}", '${extDom}').validityStatus || true;
        }

      </f:facet>
    </x:text-field>

    <x:text-field coid = "${z:vid(v, 'password0')}" value = "">

      <f:facet name = "label-props">
        text: 'Ваш пароль',
        margin: extjsf.pts(2, 6, 2, 0),
        cls: 'retrade-form-label-cell'
      </f:facet>

      <f:facet name = "extjs-props">

        inputType: 'password',
        margin: extjsf.pts(2, 0, 2, 0),
        cellCls: 'retrade-table-cell-100pc',
        fieldCls: 'x-form-field retrade-width-100pc', width: '100%',
        disabled: ${v.passwordDisabled}

      </f:facet>
    </x:text-field>

    <x:text-field coid = "${z:vid(v, 'password1')}" value = "">

      <f:facet name = "label-props">
        text: 'Новый пароль',
        margin: extjsf.pts(2, 6, 2, 0),
        cls: 'retrade-form-label-cell'
      </f:facet>

      <f:facet name = "extjs-props">

        inputType: 'password',
        margin: extjsf.pts(2, 0, 2, 0),
        cellCls: 'retrade-table-cell-100pc',
        fieldCls: 'x-form-field retrade-width-100pc', width: '100%',
        disabled: ${v.passwordDisabled}

      </f:facet>
    </x:text-field>

    <x:text-field coid = "${z:vid(v, 'password2')}" value = "">

      <f:facet name = "label-props">
        text: 'Повторите',
        margin: extjsf.pts(2, 6, 2, 0),
        cls: 'retrade-form-label-cell'
      </f:facet>

      <f:facet name = "extjs-props">

        inputType: 'password',
        margin: extjsf.pts(2, 0, 2, 0),
        cellCls: 'retrade-table-cell-100pc',
        fieldCls: 'x-form-field retrade-width-100pc', width: '100%',
        disabled: ${v.passwordDisabled},
        validator: function()
        {
          var p1 = extjsf.co("${z:vid(v, 'password1')}", '${extDom}');
          var p2 = extjsf.co("${z:vid(v, 'password2')}", '${extDom}');

          if(p1.getValue() != p2.getValue())
            return 'Повтор пароля не совпал!';
          return true;
        }

      </f:facet>
    </x:text-field>
  </x:component>

  <x:action-call coid = "${z:vid(v, 'check_login_exists')}"
    action = "#{v.doCheckLoginExists}">

    <f:facet name = "action-params">
      '${v.modelParam}': '${v.modelKeys}'
    </f:facet>
  </x:action-call>

  <x:action-call coid = "${z:vid(v, 'set_password')}"
    action = "#{v.doSetLoginAndPassword}">

    <f:facet name = "action-params">
      '${v.modelParam}': '${v.modelKeys}'
    </f:facet>
  </x:action-call>


  <script type = "text/javascript">
  //<![CDATA[

  //~: adjust window height
  extjsf.bind("${z:vid(v, 'form_layout')}", '${extDom}').on('afterrender', function()
  {
     var win = extjsf.bind('winmain', '${extDom}').co();
     var wht = win.body.getHeight();
     var frm = extjsf.bind("${z:vid(v, 'form_layout')}", '${extDom}').co();
     var fht = frm.getBox().height;

     win.setHeight(win.getHeight() - (wht - fht))
  })

  //~: validate login on change
  extjsf.bind("${z:vid(v, 'login')}", '${extDom}').on('change', function(f, v)
  {
     var fb = f.extjsfBind;
     fb.retradeLoginCheck = v; fb.validityStatus = true;

     if(ZeTS.trim(v) != v)
       fb.validityStatus = 'Логин не может начинаться или оканчиваться пробелами!';
     if(f.validate() !== true) return;

     ZeT.timeout(1000, function()
     {
       if(fb.retradeLoginCheck != v) return;

       extjsf.xbindHandler("${z:vid(v, 'check_login_exists')}", '${extDom}')({
          params: { login : fb.retradeLoginCheck }, failure: function()
          {
            fb.validityStatus = ZeT.a(f.getActiveErrors())[0];
            if(ZeTS.ises(fb.validityStatus)) fb.validityStatus = true;
            f.validate()
          }
       })
     })
  })

  //~: password change (validate the repeat)
  extjsf.bind("${z:vid(v, 'password1')}", '${extDom}').on('change', function()
  {
    extjsf.co("${z:vid(v, 'password2')}", '${extDom}').validate()
  })

  //~: submit handler
  extjsf.bindHandler("${z:vid(v, 'submit')}", '${extDom}', function()
  {
    var lo = extjsf.co("${z:vid(v, 'login')}", '${extDom}');
    var p0 = extjsf.co("${z:vid(v, 'password0')}", '${extDom}');
    var p1 = extjsf.co("${z:vid(v, 'password1')}", '${extDom}');
    var p2 = extjsf.co("${z:vid(v, 'password2')}", '${extDom}');

    //~: validate the fields
    var valid = true;
    Ext.Array.forEach([lo, p0, p1, p2], function(f)
    {
      valid = f.validate() && valid;
    })
    if(!valid) return;

    var params = { login: lo.getValue() };

    //~: compute passwords hashes
    if(p0.getValue().length)
    {
      var PH0 = CryptoJS.SHA1(p0.getValue());
      var PHx = CryptoJS.SHA1(PH0.toString(CryptoJS.enc.Hex).toUpperCase());

      var PH1 = CryptoJS.SHA1(p1.getValue());
      for(var i = 0;(i < PH0.words.length);i++)
        PH0.words[i] ^= PH1.words[i];

      params.Px = PHx.toString(CryptoJS.enc.Hex);
      params.P0 = PH0.toString(CryptoJS.enc.Hex);
    }

    extjsf.bindHandler("${z:vid(v, 'set_password')}", '${extDom}')({
      params: params, success: function()
      {
         var winmain = extjsf.bind('winmain', '${extDom}');

         winmain.passwordEdit = {
           loginCode: params.login, authLogin: '#{v.model.authLogin}'
         };

         winmain.co().close()
      }
    })
  })

  //~: submit on enter for text fields
  Ext.Array.forEach([ 'password2', 'password1', 'password0', 'login' ],
    function(id)
    {
       extjsf.bind("${z:vid(v, 'XYZ')}".replace('XYZ', id), '${extDom}').on('specialkey', function(f, e)
       {
         if(e.getKey() == e.ENTER)
           extjsf.bindHandler("${z:vid(v, 'submit')}", '${extDom}')()
         else if(e.getKey() == e.ESC)
           extjsf.bindHandler("${z:vid(v, 'close_window')}", '${extDom}')()
       })
    })

  //]]>
  </script>

  <!-- login and password form] -->

</x:winmain>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://tverts.com/retrade/webapp/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "#{v.valid}">

      <ui:fragment rendered = "#{v.loginExists}">
        <field target = "${z:vid(v, 'login')}">
          <error>Указанный логин существует!</error>
        </field>
      </ui:fragment>

      <ui:fragment rendered = "#{v.wrongUserPassword}">
        <field target = "${z:vid(v, 'password0')}">
          <error>Ваш пароль задан неверно!</error>
        </field>
      </ui:fragment>

    </validation>

    <scripts>

      <ui:fragment rendered = "#{v.model.creating and not empty v.model.authLogin}">
        <script>
        //<![CDATA[

 extjsf.bind('winmain', '${extDom}').loginCreated = {
   loginCode: '#{z:jss(v.model.loginCode)}', authLogin: '#{v.model.authLogin}',
   descr: '#{z:jss(v.authLogin.descr)}'
 };

        //]]>
        </script>
      </ui:fragment>

    </scripts>
  </ui:define>
</ui:decorate>
</ui:component>