<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesMeasuresView}"/>

${rootView.forceSecure('edit: goods')}
${v.checkModelRequested}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

<x:winmain coid = "${z:vid(v, 'root_panel')}">

  <script type = "text/javascript">

    extjsf.bind('winmain', '${rootView.extjsDomain}').
      co().setTitle("#{z:jss(v.editWindowTitle)}")

  </script>

  <f:facet name = "extjs-props">
    layout: 'fit', bodyCls: 'retrade-back-panel'
  </f:facet>

  <f:facet name = "toolbar-props">
    xtype: 'panel', bodyPadding: extjsf.pt(2),
    layout: {type: 'hbox', align: 'middle'},
    bodyCls: 'retrade-toolbar-panel'
  </f:facet>


  <!-- [toolbar -->

  <f:facet name = "toolbar">

    <!-- [cancel edit button] -->

    <x:winaction-button coid = "${z:vid(v, 'cancel')}"
       action = "#{v.gotoCancelEdit}">

      <f:facet name = "extjs-props">
        cls: 'ux-btn-red',
        text: 'Отмена'
      </f:facet>

      <f:facet name = "action-params">
        '${v.modelParam}': '#{v.modelKeys}'
      </f:facet>
   </x:winaction-button>


   <x:component coid = "${z:vid(v, '_tb_fill_0')}">
     <f:facet name = "extjs-props">
       xtype: 'panel', flex: 1, border: false,
       bodyCls: 'retrade-toolbar-inline-panel'
     </f:facet>
   </x:component>


   <!-- [submit button] -->

   <x:component coid = "${z:vid(v, 'submit')}">
    <f:facet name = "extjs-props">
      xtype:'button', text: 'Сохранить',
      cls: 'ux-btn-green'
    </f:facet>
   </x:component>

  </f:facet>

  <!-- toolbar] -->


  <!-- [measure edit form -->

  <x:form-panel modelView = "${v}" coid = "${z:vid(v, 'measure-form')}">

    <f:facet name = "extjs-props">
      border: false, bodyPadding: extjsf.pt(4),
      bodyCls: 'retrade-content-panel',
      layout: { type: 'vbox', align: 'stretch' }
    </f:facet>


    <x:component coid = "${z:vid(v, '_form_fill_0')}">
      <f:facet name = "extjs-props">
        xtype: 'panel', flex: 1, border: false,
        bodyCls: 'retrade-transparent-panel'
      </f:facet>
    </x:component>


    <!-- [code and name line -->

    <x:component coid = "${z:vid(v, '_code_name_line')}">

      <f:facet name = "extjs-props">
        border: false, bodyCls: 'retrade-transparent-panel',
        layout: { type: 'hbox', align: 'middle' }
      </f:facet>


      <!-- [measure code] -->

      <x:text-field coid = "${z:vid(v, 'code')}"
         value = "#{v.measureView.code}">

        <f:facet name = "extjs-props">
          allowBlank: false, width: extjsf.ex(16), validator: function()
          {
            return extjsf.bind("${z:vid(v, 'code')}", '${rootView.extjsDomain}').validityStatus || true;
          }
        </f:facet>

        <f:facet name = "label-props">
          text: 'Код', cls: 'retrade-info-title-label',
          margin: extjsf.dpts(0, 4, 0, 0), width: extjsf.ex(5.5)
        </f:facet>
      </x:text-field>


      <!-- [measure name] -->

      <x:text-field coid = "${z:vid(v, 'name')}"
         value = "#{v.measureView.name}">

        <f:facet name = "extjs-props">
          flex: 1, allowBlank: false
        </f:facet>

        <f:facet name = "label-props">
          text: 'имя', cls: 'retrade-info-title-label',
          margin: extjsf.dpts(0, 4, 0, 6)
        </f:facet>
      </x:text-field>
    </x:component>

    <!-- code and name line] -->


    <!-- [class code and unit -->

    <x:component coid = "${z:vid(v, '_class_code_unit_line')}">
      <f:facet name = "extjs-props">
        layout: { type: 'hbox', align: 'middle' },
        bodyCls: 'retrade-transparent-panel',
        border: false, margin: extjsf.dpts(8, 0, 0, 0)
      </f:facet>


      <!-- [class code] -->
      <x:text-field coid = "${z:vid(v, 'class-code')}"
         value = "#{v.measureView.classCode}">

        <f:facet name = "extjs-props">
          width: extjsf.ex(16)
        </f:facet>

        <f:facet name = "label-props">
          text: 'ОКЕИ', cls: 'retrade-info-title-label',
          margin: extjsf.dpts(0, 4, 0, 0), width: extjsf.ex(5.5)
        </f:facet>
      </x:text-field>


      <!-- [class unit] -->
      <x:text-field coid = "${z:vid(v, 'class-unit')}"
         value = "#{v.measureView.classUnit}">

        <f:facet name = "extjs-props">
          allowBlank: false, width: extjsf.ex(12),
          maskRe: retrade.#{(v.measureView.fractional)?('rdecimal'):('rinteger')},
          validator: ZeT.fbind(retrade.#{(v.measureView.fractional)?('vvolume'):('vivolume')}, retrade, { blank: false })
        </f:facet>

        <f:facet name = "label-props">
          text: 'коэфф.', cls: 'retrade-info-title-label',
          margin: extjsf.dpts(0, 4, 0, 6)
        </f:facet>

        <f:converter for = "valueInput"
          converterId = "com.tverts:fmt:decimal"/>
      </x:text-field>


      <!-- [is fractional checkbox] -->
      <x:checkbox-field coid = "${z:vid(v, 'fractional')}"
         value = "#{v.measureView.fractional}">

        <f:facet name = "extjs-props">
          margin: extjsf.dpts(0, 4, 0, 6)
        </f:facet>

        <f:facet name = "label-props">
          html: "&lt;span title = 'Десятичное значение позволяет задавать объём товара с точностью до тысячных долей. (Изменение значения не затронет существующие объёмы товаров.)'&gt;десятичное&lt;/span&gt;"
        </f:facet>
      </x:checkbox-field>
    </x:component>

    <!-- class code and unit] -->


    <x:component coid = "${z:vid(v, '_form_fill_1')}">
     <f:facet name = "extjs-props">
       xtype: 'panel', flex: 1, border: false,
       bodyCls: 'retrade-transparent-panel'
     </f:facet>
    </x:component>


    <!-- [special: submit action] -->

    <h:commandButton id = "${z:vid(v, 'submit-action')}" value = "submit" style = "display: none;"
      action = "#{v.doCommitEdit}"/>

  </x:form-panel>


  <x:action-call coid = "${z:vid(v, 'check-code-exists-script')}"
    action = "#{v.doCheckCodeExists}">

    <f:facet name = "action-params">
      '${v.modelParam}': '${v.modelKeys}'
    </f:facet>
  </x:action-call>


  <script type = "text/javascript">
  //<![CDATA[

  //~: validate on code change
  extjsf.bind("${z:vid(v, 'code')}", '${rootView.extjsDomain}').on('change', function(f, v)
  {
     var fb = f.extjsfBind;
     fb.retradeCodeCheck = v; fb.validityStatus = true;

     if(ZeTS.trim(v) != v)
       fb.validityStatus = 'Код не может начинаться или оканчиваться пробелами!';
     if(f.validate() !== true) return;

     ZeT.timeout(1000, function()
     {
       if(fb.retradeCodeCheck != v) return;

       extjsf.xbindHandler("${z:vid(v, 'check-code-exists-script')}", '${rootView.extjsDomain}')({
          params: { code : fb.retradeCodeCheck }, failure: function()
          {
            fb.validityStatus = ZeT.a(f.getActiveErrors())[0];
            if(ZeTS.ises(fb.validityStatus)) fb.validityStatus = true;
            f.validate()
          }
       })
     })
  })


  //~: submit the form
  extjsf.bindHandler("${z:vid(v, 'submit')}", '${rootView.extjsDomain}', function()
  {
    var form = extjsf.bind("${z:vid(v, 'measure-form')}", '${rootView.extjsDomain}');
    if(!form.co().isValid()) return;

    form.submitForm({ '${v.viewModeParam}': '${v.viewModePostStr}',
      command: "${z:vid(v, 'submit-action')}", success: function()
      {
        extjsf.bindHandler("${z:vid(v, 'cancel')}", '${rootView.extjsDomain}')()
      }
    })
  })


  //~: toggle fractional checkbox
  extjsf.bind("${z:vid(v, 'fractional')}", '${rootView.extjsDomain}').on('change', function(cb, v)
  {
    var cu = extjsf.co("${z:vid(v, 'class-unit')}", '${rootView.extjsDomain}')

    //?: {is fractional}
    if(v)
    {
      cu.validator = ZeT.fbind(retrade.vvolume, retrade, { blank: false })
      cu.maskRe = retrade.rdecimal
    }
    //~: is integer
    else
    {
      cu.validator = ZeT.fbind(retrade.vivolume, retrade, { blank: false })
      cu.maskRe = retrade.rinteger

      var n = parseFloat(cu.getValue())
      if(ZeT.isn(n)) cu.setValue('' + Math.floor(n)); else cu.setValue('1')
    }

    cu.validate()
  })


  //~: adjust window size
  Ext.onReady(ZeT.timeouted(150, function()
  {
    ReTrade.desktop.resizeToHeight('winmain',
      { domain: '${rootView.extjsDomain}', '+hpt': 16, force: true },
      [ "${z:vid(v, '_code_name_line')}", "${z:vid(v, '_class_code_unit_line')}" ]
    )
  }))

  //]]>
  </script>

  <!-- measure edit form] -->

</x:winmain>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://tverts.com/retrade/webapp/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "#{v.formValid}">

      <ui:fragment rendered = "#{v.codeExists}">
        <field target = "${z:vid(v, 'code')}">
          <error>Указанный код уже используется в другой Единице измерения!</error>
        </field>
      </ui:fragment>

    </validation>
  </ui:define>
</ui:decorate>
</ui:component>