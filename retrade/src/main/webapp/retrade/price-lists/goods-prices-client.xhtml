<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesClientGoodsView}"/>

${rootView.forceSecureClientOnly(true)}
${v.checkModelRequestedWithRedirect}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

  <ui:define name = 'page_body'>

  <x:root-panel coid = "${z:vid(v, 'goods_root_panel')}" position = "#{rootView.extjsPosition}">

    <f:facet name = "extjs-props">
      title: 'Цены товаров'
    </f:facet>


    <!-- [toolbar -->

    <f:facet name = "toolbar-props">
      xtype: 'panel', bodyPadding: extjsf.pt(2),
      layout: {type: 'hbox', align: 'middle'},
      bodyCls: 'retrade-toolbar-inline-panel'
    </f:facet>

    <f:facet name = "toolbar">

      <x:component coid = "${z:vid(v, '_tb_fill_0')}">
        <f:facet name = "extjs-props">
          xtype: 'panel', flex: 1, frame: false, border: false,
          bodyCls: 'retrade-toolbar-inline-panel'
        </f:facet>
      </x:component>


      <!-- [filter goods field -->

      <x:text-field coid = "${z:vid(v, 'search-goods')}"
        value = "#{v.model.searchGoods}">

        <f:facet name = "extjs-props">
          margin: extjsf.dpts(1, 0, 1, 4),
          width:  extjsf.ex(24)
        </f:facet>

        <f:facet name = "label-props">
          text: 'Поиск', margin: extjsf.pts(1, 0, 1, 8)
        </f:facet>
      </x:text-field>


      <!-- [restrict to selection set] -->

      <x:component coid = "${z:vid(v, 'search-goods-selset')}">
        <f:facet name = "extjs-props">

          xtype: 'button', enableToggle: true,
          width: 30, componentCls: 'retrade-icon-24',
          margin: extjsf.dpts(1, 0, 1, 6),
          iconCls: 'retrade-selset-button-icon',
          tooltipType: 'title', tooltip: 'Ограничить текущей выборкой'

        </f:facet>
      </x:component>


      <x:action-call coid = "${z:vid(v, 'search-goods-script')}"
        action = "#{v.doSearchGoods}">

        <f:facet name = "action-params">
          '${v.modelParam}': '${v.modelKeys}'
        </f:facet>
      </x:action-call>

      <script type = "text/javascript">
      //<![CDATA[

    extjsf.bind("${z:vid(v, 'search-goods')}", '${rootView.extjsDomain}').on('change', function(f)
    {
      var sv = ZeTS.trim(f.getValue());
      if(!f.extjsfBind) return; f.extjsfBind.searchValue = sv;

      var fn = function()
      {
        //?: {search string was changed} discard
        if(f.extjsfBind.searchValue != sv) return;

        var params = { searchGoods: sv };
        var selchk = extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${rootView.extjsDomain}').component();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.bindHandler("${z:vid(v, 'search-goods-script')}", '${rootView.extjsDomain}')({
          params: params, success : function() {
            Ext.data.StoreManager.lookup("${z:vid(v, 'goodUnits')}").loadPage(1)
        }})
      }

      setTimeout(fn, 1000)
    })

    //~: selection set only toggled
    extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${rootView.extjsDomain}').on('toggle', function()
    {
        var names  = extjsf.bind("${z:vid(v, 'search-goods')}", '${rootView.extjsDomain}').value();
        var params = { searchGoods: names };

        var selchk = extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${rootView.extjsDomain}').component();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.bindHandler("${z:vid(v, 'search-goods-script')}", '${rootView.extjsDomain}')({
          params: params, success : function() {
             Ext.data.StoreManager.lookup("${z:vid(v, 'goodUnits')}").loadPage(1)
        }})
    })

      //]]>
      </script>

      <!-- filter goods field] -->

    </f:facet>

    <!-- toolbar] -->


    <!-- [goods table -->

    <x:data-store storeId = "${z:vid(v, 'goodUnits')}"
      modelView = "${v}" pageSize = "20">

      <f:facet name = "store-props">
        model: 'retrade.model.GoodPriceView', remoteSort: true,
        sorters: [{ property: 'goodName', direction: 'ASC' }]
      </f:facet>

      <f:facet name = "proxy-props">
        reader: ZeT.defined('retrade.readers.GoodUnitView')
      </f:facet>
    </x:data-store>

    <x:data-grid coid = "${z:vid(v, 'grid')}" selset = "true"
      storeId = "${z:vid(v, 'goodUnits')}">

      <f:facet name = "grid-props">

        columns: ZeT.defined('retrade.columns.ClientGoodPriceView'),
        selModel: extjsf.delayCreate('Ext.selection.RowModel', {mode: 'SINGLE'}),
        pager: true, sortableColumns: true, region: 'center',
        cls: 'retrade-grid-large'

      </f:facet>
    </x:data-grid>

    <!-- goods table] -->


    <!-- [good info window -->

    <x:component coid = "${z:vid(v, 'goods-info-window')}">
      <f:facet name = "extjs-props">

        xtype: 'window', closeAction: 'hide', layout: 'fit',
        resizable: false, header: false, draggable: false,
        border: false, bodyCls: 'retrade-transparent-panel',
        bodyPadding: extjsf.pt(2)

      </f:facet>

      <x:html coid = "${z:vid(v, 'goods-info-html')}">

        <table id = "${z:vid(v, 'goods-info')}"
          cellpadding = "0" cellspacing = "0" border = "0"
          class = "retrade-client-good-layout"
          style="width: 100%; height: 100%;">

          <tr><td style = "vertical-align: top;">
          <table cellpadding = "0" cellspacing = "0" border = "0"
                 class = "retrade-info-table retrade-client-good-main">
            <tr>
              <td class = "retrade-info-title retrade-client-good-info-code">
                <div>Код товара</div>
              </td>
              <td class = "retrade-info-value retrade-client-good-info-code">
                <div/>
              </td>

              <td class = "retrade-client-good-info-code-price-sep" style = "width:100%; min-width: 7pt;"><div/></td>

              <td class = "retrade-info-title retrade-client-good-info-price">
                <div style="margin-left: 0;">Цена</div>
              </td>
              <td class = "retrade-info-value retrade-client-good-info-price">
                <div/>
              </td>
              <td class = "retrade-info-value retrade-client-good-info-price-mucode">
                <div style="margin-left: 2px;"/>
              </td>
            </tr>
            <tr>
              <td colspan = "6" class = "retrade-info-value retrade-client-good-info-name">
                <div style = "margin-top: 2px;"/>
              </td>
            </tr>
          </table>

          <table cellpadding = "0" cellspacing = "0" border = "0"
                 class = "retrade-info-table retrade-client-good-measure" style="margin-top: 2px;">
            <tr>
              <td class = "retrade-info-title retrade-client-good-info-measure">
                <div>Ед. изм.</div>
              </td>
              <td class = "retrade-info-value retrade-client-good-info-mucode">
                <div style="margin-left: 2px;"/>
              </td>
              <td class = "retrade-info-value retrade-client-good-info-muname" style="width:100%;">
                <div style="margin-left: 2px;"/>
              </td>
            </tr>
          </table>
        </td></tr>

        <tr class = "retrade-client-good-loaded-layout"><td style="width: 100%; height: 100%; text-align: center; vertical-align: middle;">

          <!-- is now loading message -->
          <span class = "retrade-client-good-loading" style = "display: none; font-style: italic;">
            Загрузка...
          </span>

          <!-- loadded content layout-->
          <table cellpadding = "0" cellspacing = "0" border = "0"
            class = "retrade-client-good-loaded-content" style = "display: none; width: 100%;">

            <!-- row for a regular good -->
            <tr class = "retrade-client-good-is-regular" style="display: none;">
              <td class = "retrade-info-value-small-text" style="text-transform: uppercase; font-weight: bolder; padding-top: 8px;">
               <div style="text-align: right;">Товар или сырьё</div>
              </td>
            </tr>

            <!-- derived good -->
            <tr class = "retrade-client-good-is-derived" style="display: none; width: 100%;">

              <td class = "retrade-info-value-small-text retrade-client-good-is-derived-semi-ready" style="text-transform: uppercase; font-weight: bolder; padding-top: 8px;">
               <div style="text-align: right;">Полуфабрикат</div>
              </td>

              <td style="width:100%;"><div/></td>

              <td class = "retrade-info-value-small-text" style="text-transform: uppercase; font-weight: bolder; padding-top: 8px;">
               <div style="text-align: right;">Производный продукт</div>
              </td>
            </tr>


          </table>

        </td></tr>
        </table>
      </x:html>
    </x:component>

    <x:action-call coid = "${z:vid(v, 'goods-info-script')}"
      action = "#{v.doViewGoodInfo}">

      <f:facet name = "action-params">
        '${v.modelParam}': '${v.modelKeys}'
      </f:facet>
    </x:action-call>

    <script type = "text/javascript">
    //<![CDATA[

  extjsf.bind("${z:vid(v, 'grid')}", '${rootView.extjsDomain}').
    on('cellclick', function(grid, td, cellIndex, record, tr, rowIndex, e)
  {
    //?: {this is action column}
    var column = extjsf.support.gridColumns(grid, true)[cellIndex];
    if('actioncolumn' === column.xtype) return

    //~: calculate the box
    var box = ReTrade.desktop.calcWindowBox({
      event: e, widthpt: 260, heightpt: 180, '+xpt': -130, '-y': 90
    })

    //~: the info window
    var wnd = extjsf.component("${z:vid(v, 'goods-info-window')}", '${rootView.extjsDomain}');

    //~: request the info
    extjsf.bindHandler("${z:vid(v, 'goods-info-script')}", '${rootView.extjsDomain}')({
      params: { goodUnit: record.getId() }
    })

    //~: close listener
    if(!wnd.extjsfBind.retradeWindowShow)
      wnd.on('show', wnd.extjsfBind.retradeWindowShow = function()
      {
        ZeT.timeout(100, function()
        {
          //~: listen on body
          var clo; Ext.getBody().on('click', clo = function(e)
          {
            //?: {is click in the window}
            if(!wnd.getRegion().isOutOfBound(Ext.util.Point.fromEvent(e))) return

            //!: destroy the listener
            Ext.getBody().removeListener('click', clo)

            wnd.close() //<-- hide the window
          })
        })
      })

    //~: init the fields
    var init = function()
    {
      var n = Ext.get("${z:vid(v, 'goods-info')}");

      //=: good code
      n.down('td.retrade-info-value.retrade-client-good-info-code div').
        update(record.get('goodCode'))

      //=: good price
      n.down('td.retrade-info-value.retrade-client-good-info-price div').
        update(record.get('price'))

      //=: measure unit code (at the price)
      n.down('td.retrade-info-value.retrade-client-good-info-price-mucode div').
        update(record.get('measureCode'))

      //=: good name
      n.down('td.retrade-info-value.retrade-client-good-info-name div').
        update(record.get('goodName'))

      //=: measure unit code
      n.down('td.retrade-info-value.retrade-client-good-info-mucode div').
        update(record.get('measureCode'))

      //=: measure unit name
      n.down('td.retrade-info-value.retrade-client-good-info-muname div').
        update(record.get('measureName'))

      //~: hide the content pane & show loading message
      n.down('table.retrade-client-good-loaded-content').setDisplayed(false)
      n.down('span.retrade-client-good-loading').setDisplayed(true)
    }

    //~: show window in the box
    ZeT.timeout(100, function()
    {
      init()
      wnd.show().setBox(box)
    })
  })
    //]]>
    </script>

    <!-- good info window] -->

  </x:root-panel>

</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://tverts.com/retrade/webapp/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "true"/>
  </ui:define>

  <ui:define name = 'scripts'>

    <ui:fragment rendered = "#{not empty v.infoGood}">
      <script>
      //<![CDATA[

(function()
{
  var wnd = extjsf.component("${z:vid(v, 'goods-info-window')}", '${rootView.extjsDomain}');
  var inf = Ext.get("${z:vid(v, 'goods-info')}");
  var ltd = inf.down('tr.retrade-client-good-loaded-layout td');
  var cnt = ltd.down('table.retrade-client-good-loaded-content');

  ZeT.log('loaded good #{v.infoGood.code}')

  //~: hide loading message & show the content pane
  inf.down('span.retrade-client-good-loading').setDisplayed(false)
  cnt.setDisplayed(true)

  //?: {this is a regular good}
  var irg = ('true' == '#{empty v.infoGood.goodCalc}');

  //?: {this is a semi-ready product}
  var isr = ('true' == '#{not empty v.infoGood.goodCalc and v.infoGood.goodCalc.semiReady}');

  //?: {this is a derived good}
  var idg = ('true' == '#{not empty v.infoGood.goodCalc.superGood}');

  //~: hide-display the content areas
  cnt.down('tr.retrade-client-good-is-regular').setDisplayed(irg)
  cnt.down('tr.retrade-client-good-is-derived').setDisplayed(idg)
  cnt.down('td.retrade-client-good-is-derived-semi-ready').setDisplayed(isr)


  //~: accommodate the window height
  var dy = ltd.getHeight() - cnt.getHeight();
  if(dy > 4) wnd.setHeight(wnd.getHeight() - dy + 4)

})()

      //]]>
      </script>
    </ui:fragment>
  </ui:define>
</ui:decorate>
</ui:component>