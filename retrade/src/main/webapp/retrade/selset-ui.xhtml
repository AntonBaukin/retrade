<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'
  xmlns:z  = 'uri:tverts.com'>

  <c:set var = "v" scope = "request" value = "${facesSelSetView}"/>

  ${v.checkModelRequestedWithRedirect}

  <ui:decorate template = '/resources/.view-modes/body.xhtml'
    xmlns    = 'http://www.w3.org/1999/xhtml'
    xmlns:h  = 'http://java.sun.com/jsf/html'
    xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

  <ui:define name = 'page_body'>

  <ui:fragment rendered = "#{v.getParam('controls') == 'true'}">

  <!-- [selection set controls -->

  <!-- [selection set data store] -->
  <x:data-store storeId = "${z:vid(v, 'selSetStore')}"
    modelView = "${v}">

    <f:facet name = "store-props">
      model: 'retrade.model.SelSetView',
      autoLoad: false, pageSize: 10
    </f:facet>

    <f:facet name = "proxy-props">
      reader: ZeT.defined('retrade.readers.SelSetView')
    </f:facet>
  </x:data-store>

  <script type = "text/javascript">
  //<![CDATA[

  //~: post-initialize selection set global instance
  ReTrade.selset.
    model('${v.modelKeys}').
    storeId("${z:vid(v, 'selSetStore')}").
    url('window', "${z:url('/go/retrade/selset-ui')}").
    buildMenu(#{v.selSetMenuModel})


  //~: selection set add script wrapper
  ReTrade.selset.adder(function(id, remove)
  {
     var script = (remove)?("${z:vid(v, 'script_selset_del_object')}"):("${z:vid(v, 'script_selset_add_object')}");

     extjsf.handler(script, '${extDom}')({
       params: { entity: id }, success: function()
       {
         Ext.data.StoreManager.lookup("${z:vid(v, 'selSetStore')}").loadPage(1)
       }
     })
  })


  //~: selection set change script wrapper
  ReTrade.selset.changer(function(selset, onsuccess)
  {
     extjsf.handler("${z:vid(v, 'script_selset_change')}", '${extDom}')({
       params: { selset: selset }, success: onsuccess
     })
  })


  //~: selection set toggle button
  $('#' + ReTrade.selset.button()).click(function()
  {
    ReTrade.selset.toggle(undefined, retrade_default('selset-win'))
  })


  //~: edit selection
  $('#' + ReTrade.selset.ctlitems('edit')).click(function()
  {
    //~: access active selection set window
    var window = ReTrade.selset.window()

    //?: {has it no} open in edit mode
    if(!window) return ReTrade.selset.toggle(true, ZeT.deepExtend(
      ZeT.deepClone(retrade_default('selset-win')),
        { params: { 'selset-edit': 'true' }}))

    var edit = extjsf.bind("${z:vid(v, 'window-selset-edit')}", '${extDom}')
    var grid = extjsf.bind("${z:vid(v, 'selset-grid')}", '${extDom}')
    ZeT.assert(edit && grid, 'Selection Set window has no content!')

    grid.co().hide()
    edit.co().show()
  })


  //~: add selection
  $('#' + ReTrade.selset.ctlitems('add')).click(function()
  {
    extjsf.handler("${z:vid(v, 'script_selset_add')}", '${extDom}')()
  })


  //~: delete selection set
  $('#' + ReTrade.selset.ctlitems('delete')).click(function()
  {
    extjsf.handler("${z:vid(v, 'script_selset_delete')}", '${extDom}')({
      success: function()
      {
         Ext.data.StoreManager.lookup(ReTrade.selset.storeId()).load()
         ReTrade.selset.reload()
      }
    })
  })


  //~: clear selection
  $('#' + ReTrade.selset.ctlitems('clear')).click(function()
  {
    extjsf.handler("${z:vid(v, 'script_selset_clear')}", '${extDom}')({
      success: function()
      {
        Ext.data.StoreManager.lookup("${z:vid(v, 'selSetStore')}").loadPage(1)
      }
    })
  })


  //~: create the window now
  ReTrade.selset.window(retrade_default('selset-win'))


  //!: synchronize on the desktop
  //ReTrade.desktop.readyPoint('ReTrade.selset', true)

 //]]>
 </script>

 <!-- selection set controls] -->
 </ui:fragment>


  <!-- [selection set calls -->

  <!-- [script to add object to selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_add_object')}"
     action = "#{v.doAddObject}" modelView = "${v}"/>


  <!-- [script to delete object from selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_del_object')}"
    action = "#{v.doDelObject}" modelView = "${v}"/>


  <!-- [script to delete item from selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_del_item')}"
    action = "#{v.doDelItem}" modelView = "${v}"/>


  <!-- [script to add new selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_add')}"
     action = "#{v.doAddSelSet}" modelView = "${v}"/>


  <!-- [script to clear the selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_clear')}"
     action = "#{v.doClearSelSet}" modelView = "${v}"/>


  <!-- [script to change selection] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_change')}"
     action = "#{v.doChangeSelSet}" modelView = "${v}"/>


  <!-- [script to delete selection set] -->
  <x:action-call coid = "${z:vid(v, 'script_selset_delete')}"
     action = "#{v.doDeleteSelSet}" modelView = "${v}"/>

  <!-- selection set calls] -->


 <!-- [selection set window -->

 <x:winmain coid = "${z:vid(v, 'selset-panel')}"
    webLink = "false" winAlign = "strict"
    windowBind = 'window-selset'>

    <script type = "text/javascript">
    //<![CDATA[

    ZeT.scope(extjsf.bind('window-selset', '${extDom}'), function(w)
    {
      if(w.co()) w.co().setTitle('${z:jss(v.windowTitle)}')
      else w.props({ title: '${z:jss(v.windowTitle)}' })
    })

    //]]>
    </script>


    <f:facet name = "extjs-props">
       layout: 'fit', bodyCls: 'retrade-back-panel'
    </f:facet>


    <!-- [selection set edit form -->

    <x:form-panel coid = "${z:vid(v, 'window-selset-edit')}"
      modelView = "${v}">

      <f:facet name = "extjs-props">

        hidden: #{not v.editMode}, border: false,
        frame: false, bodyCls: 'retrade-content-panel',
        layout: {type: 'vbox', align: 'stretch'}

      </f:facet>

      <!-- [cancel + save buttons -->

      <x:component coid = "${z:vid(v, '_window-selset-edit-buttons')}">

        <f:facet name = "extjs-props">

          border: false, frame: false,
          bodyCls: 'retrade-toolbar-inline-panel',
          layout: {type: 'hbox', align: 'middle'},
          bodyPadding: extjsf.pt(2)

        </f:facet>

        <x:component coid = "${z:vid(v, 'window-selset-edit-cancel')}">
          <f:facet name = "extjs-props">
            xtype: 'button', text: 'Отмена',
            cls: 'ux-btn-red'
          </f:facet>
        </x:component>

        <x:component coid = "${z:vid(v, '_window-selset-edit-buttons_fill')}">
          <f:facet name = "extjs-props">
            flex: 1, frame: false, border: false,
            bodyCls: 'retrade-transparent-panel'
          </f:facet>
        </x:component>

        <x:component coid = "${z:vid(v, 'window-selset-edit-submit')}">
          <f:facet name = "extjs-props">
            xtype: 'button', text: 'Сохранить',
            cls: 'ux-btn-green'
          </f:facet>
        </x:component>

      </x:component>

      <!-- cancel + save buttons] -->


      <!-- [name field -->

      <x:component coid = "${z:vid(v, '_window-selset-edit-name')}">
        <f:facet name = "extjs-props">

          border: false, frame: false,
          bodyCls: 'retrade-transparent-panel',
          layout: {type: 'hbox', align: 'middle'},
          margin: extjsf.pts(8, 2, 0, 2)

        </f:facet>

        <x:text-field coid = "${z:vid(v, 'window-selset-edit-name')}"
          value = "#{v.selSetNameEdit}">

          <f:facet name = "extjs-props">
            disabled: #{v.defaultSelSet}, flex: 1
          </f:facet>

          <f:facet name = "label-props">
            text: 'Имя', margin: extjsf.pts(0, 4, 0, 0),
            cls: 'retrade-info-title-label'
          </f:facet>
        </x:text-field>
      </x:component>

      <!-- name field] -->

      <!-- [edit mode hidden] -->
      <x:hidden-field coid = "${z:vid(v, 'window-selset-edit-mode')}"
         value = "true"/>

      <!-- [submit action] -->
      <h:commandButton id = "submit_action" value = "submit" style = "display: none;"
        action = "#{v.doEditSelSet}"/>

    </x:form-panel>

    <script type = "text/javascript">
    //<![CDATA[

    extjsf.handler("${z:vid(v, 'window-selset-edit-cancel')}", '${extDom}', function()
    {
       var edit = extjsf.bind("${z:vid(v, 'window-selset-edit')}", '${extDom}');
       var grid = extjsf.bind("${z:vid(v, 'selset-grid')}", '${extDom}');

       edit.co().hide()
       grid.co().show()
    })

    extjsf.handler("${z:vid(v, 'window-selset-edit-submit')}", '${extDom}', function()
    {
       var form = extjsf.bind("${z:vid(v, 'window-selset-edit')}", '${extDom}');
       var edit = extjsf.bind("${z:vid(v, 'window-selset-edit')}", '${extDom}');
       var grid = extjsf.bind("${z:vid(v, 'selset-grid')}", '${extDom}');

       //~: submit the form
       form.submit({command: 'submit_action', success: function()
       {
         edit.co().hide(); grid.co().show()
       }})
    })

    //]]>
    </script>

    <!-- selection set edit form] -->


    <!-- [selection set table -->

    <x:data-grid coid = "${z:vid(v, 'selset-grid')}"
      storeId = "${z:vid(v, 'selSetStore')}">

      <f:facet name = "grid-props">

        hidden: #{v.editMode}, pager: true, hideHeaders: true,
        columns: ZeT.defined('retrade.columns.SelSetView'),
        cls: "#{(v.clientUser)?('retrade-grid-large'):('')}"

      </f:facet>
    </x:data-grid>


    <script type = "text/javascript">
    //<![CDATA[

    extjsf.bind("${z:vid(v, 'selset-grid')}", '${extDom}').on('added', function(grid)
    {
      //~: add action column to remove items from teh set
      grid.headerCt.insert(0, Ext.create('Ext.grid.column.Action', {
        width: 28, flex:0, align: 'center',
        hideable: false, draggable: false,
        resizable: false, menuDisabled: true, items: [{
          iconCls: 'retrade-selcol-del',
          handler: function(grid, row)
          {
             var rec = grid.getStore().getAt(row);
             extjsf.handler("${z:vid(v, 'script_selset_del_item')}", '${extDom}')({
              params: { entity: rec.getId() }, success: function()
              {
                Ext.data.StoreManager.lookup("${z:vid(v, 'selSetStore')}").load()
              }
            })
          }
        }]
      }))

      //~: reload the set store
      ZeT.timeout(100, function() { grid.getStore().loadPage(1) })
    })

    //]]>
    </script>

    <!-- selection set table] -->

  </x:winmain>

 <!-- selection set window] -->

 <ui:fragment rendered = "#{v.renderItems}">
    <script type = "text/javascript">
    //<![CDATA[

ReTrade.selset.items([#{v.selSetItems}])

    //]]>
    </script>
  </ui:fragment>

 </ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://extjs.jsf.java.net/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>

    <validation success = "#{v.success}">

      <ui:fragment rendered = "#{v.editMode and v.editNameExists}">

        <field target = "${z:vid(v, 'window-selset-edit-name')}">
          <error>
              Выборка с указанным именем существует!
              Имя не должно быть пустым.
          </error>
        </field>
      </ui:fragment>
    </validation>
  </ui:define>

  <ui:define name = 'scripts'>

    <ui:fragment rendered = "#{v.renderItems}">
      <script>
      //<![CDATA[

ReTrade.selset.items([#{v.selSetItems}])

      //]]>
      </script>
    </ui:fragment>

    <ui:fragment rendered = "#{v.updatedMenu}">
      <script>
      //<![CDATA[

        ZeT.scope(extjsf.bind('window-selset', '${extDom}'), function(w)
        {
          if(w.co()) w.co().setTitle('${z:jss(v.windowTitle)}')
          else w.props({ title: '${z:jss(v.windowTitle)}' })
        })

        ReTrade.selset.buildMenu(#{v.selSetMenuModel})

      //]]>
      </script>
    </ui:fragment>
  </ui:define>
</ui:decorate>
</ui:component>
