<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns = 'http://www.w3.org/1999/xhtml'
  xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'
  xmlns:z  = 'uri:tverts.com'>


  <!-- [documents filter form -->

  <x:form-panel modelView = "${localView}" coid = "${z:vid(localView, 'docs_filter_form')}">

    <f:facet name = "extjs-props">
      region: 'north', border: false,
      hidden: ${not defaultShown},
      bodyPadding: 0, margin: 0,
      bodyCls: 'retrade-transparent-panel',
      layout: {type: 'hbox', align: 'middle'}
    </f:facet>


    <!-- [filter dates -->

    <x:component coid = "${z:vid(localView, '_filter_form_dates0')}"
      rendered = "#{not datesHidden}">

      <f:facet name = "extjs-props">
        xtype: 'panel', frame: false, border: false,
        bodyCls: 'retrade-transparent-panel',
        margin: extjsf.dpts(0, 12, 0, 0),
        layout: {type: 'hbox', align: 'middle'}
      </f:facet>


      <!-- [min date] -->
      <x:date-field coid = "${z:vid(localView, 'min_date')}"
        value = "#{filterModel.minDate}">

        <f:facet name = "extjs-props">
          width: extjsf.ex(15)
        </f:facet>

        <f:facet name = "label-props">
          text: 'От', cls: 'retrade-info-title-label',
          margin: extjsf.pts(0, 4, 0, 0)
        </f:facet>
      </x:date-field>


      <!-- [max date] -->
      <x:date-field coid = "${z:vid(localView, 'max_date')}"
        value = "#{filterModel.maxDate}">

        <f:facet name = "extjs-props">
          width: extjsf.ex(15)
        </f:facet>

        <f:facet name = "label-props">
          text: 'до', cls: 'retrade-info-title-label',
          margin: extjsf.pts(0, 4, 0, 6)
        </f:facet>
      </x:date-field>
    </x:component>

    <!-- filter dates] -->


    <!-- [filter doc types -->

    <x:component coid = "${z:vid(localView, 'filter-form-doc-types-menu-button')}">

      <f:facet name = "extjs-props">

        xtype: 'button', text: 'Тип документа', height: 30, arrowVisible: false,
        iconCls: 'retrade-document-icon', componentCls: 'retrade-button-22pt',
        margin: extjsf.dpts(0, 12, 0, 0), tooltipType: 'title',
        tooltip: 'Выберете типы отображаемых документов'

      </f:facet>

      <script type = "text/javascript">
      //<![CDATA[

  extjsf.bind("${z:vid(localView, 'filter-form-doc-types-menu-button')}", '${extDom}').
    onDocTypeItemClick = function(item, event)
  {
    var menu = extjsf.co("${z:vid(localView, 'filter-form-doc-types-menu-button')}", '${extDom}');
    var subs = menu.query('menucheckitem');

    if(event.ctrlKey) Ext.Array.each(subs, function(i)
    {
      if(i != item) i.setChecked(!item.checked, true)
    })

    var any = false; Ext.Array.each(subs, function(i)
    {
      any = any || i.checked;
    })

    if(!any) Ext.Array.each(subs, function(i)
    {
      if(i != item) i.setChecked(true, true)
    })

    if(!any && (subs.length == 1))
      item.setChecked(true, true)
  }
      //]]>
      </script>

      <x:menu coid = "${z:vid(localView, 'filter-form-doc-types-menu')}">

        <f:facet name = "extjs-props">
          showSeparator: false
        </f:facet>

        <ui:repeat value = "#{z:mapAsList(filterModel.docTypesLabels)}" var = "e">

          <c:set var = 'menuid' value = '_filter_form_doc_types_menu_#{e.key}'/>

          <x:component coid = "${z:vid(localView, menuid)}">
            <f:facet name = "extjs-props">
              xtype: 'menucheckitem', text: '#{z:jss(e.value)}',
              checked: #{filterModel.docTypes.contains(e.key)},
              tooltipType: 'title', tooltip: 'Удерживайте Ctrl (Meta), чтобы обратить выделение',

              listeners: { click:
                extjsf.bind("${z:vid(localView, 'filter-form-doc-types-menu-button')}", '${extDom}').onDocTypeItemClick
              }
            </f:facet>
          </x:component>
        </ui:repeat>
      </x:menu>
    </x:component>

    <x:hidden-field coid = "${z:vid(localView, 'filter-form-doc-types-str')}"
       value = "#{filterModel.docTypesStr}"/>

    <!-- filter doc types] -->


    <!-- [filter doc states] -->
    <x:component coid = "${z:vid(localView, '_filter_form_doc_states')}"
      rendered = "#{not statesHidden}">

      <f:facet name = "extjs-props">
        layout: {type: 'hbox', align: 'middle'},
        border: false, bodyCls: 'retrade-transparent-panel',
        margin: extjsf.dpts(0, 12, 0, 0)
      </f:facet>

      <x:checkboxes coid = "${z:vid(localView, 'filter-form-doc-states')}"
        value = "#{filterModel.docStates}" labels = "#{filterModel.docStatesLabels}"
        allowNone = "false">

        <f:facet name = "label-props">
          cls: 'retrade-info-title-label',
          margin: extjsf.pts(0, 6, 0, 4)
        </f:facet>
      </x:checkboxes>
    </x:component>


    <x:component coid = "${z:vid(localView, '_filter_form_doc_types_fill')}">
      <f:facet name = "extjs-props">
        xtype: 'panel', frame: false, border: false,
        width: extjsf.dpt(8), flex: 3,
        bodyCls: 'retrade-transparent-panel'
      </f:facet>
    </x:component>


    <!-- [with selection set -->

    <x:component coid = "${z:vid(localView, '_with-selset')}">

      <f:facet name = "extjs-props">

        bodyCls: 'retrade-transparent-panel',
        border: false, frame: false,
        layout: {type: 'table', columns: 2}

      </f:facet>

      <x:component coid = "${z:vid(localView, 'with-selset-check')}">
        <f:facet name = "extjs-props">

          xtype: 'button', enableToggle: true,
          width: retrade_default('button-selset').width,
          height: retrade_default('button-selset').height,
          componentCls: 'retrade-icon-24 retrade-button-22pt',
          iconCls: 'retrade-selset-button-icon',
          tooltipType: 'title', tooltip: 'Отображать только документы текущей выборки',
          pressed: #{filterModel.withSelSet}

        </f:facet>
      </x:component>

      <x:hidden-field coid = "${z:vid(localView, 'with-selset-with')}"
        value = "#{filterModel.withSelSet}"/>

      <x:hidden-field coid = "${z:vid(localView, 'with-selset-name')}"
        value = "#{filterModel.selSet}"/>

    </x:component>

    <!-- with selection set] -->


    <!-- [submit (refresh) button -->

    <x:component coid = "${z:vid(localView, 'docs-filter-refresh')}">
      <f:facet name = "extjs-props">

        xtype: 'button', text : 'Применить', height: 30,
        iconCls: 'x-tbar-loading retrade-icon-smaller',
        componentCls: 'retrade-button-22pt',
        margin: extjsf.dpts(0, 0, 0, 6)

      </f:facet>
    </x:component>

    <script type = "text/javascript">
      //<![CDATA[

      extjsf.handler("${z:vid(localView, 'docs-filter-refresh')}", '${extDom}', function()
      {
        //~: document types encoded
        var doctstr = extjsf.bind("${z:vid(localView, 'filter-form-doc-types-str')}", '${extDom}');
        var docmenu = extjsf.co("${z:vid(localView, 'filter-form-doc-types-menu-button')}", '${extDom}');
        var docsubs = docmenu.query('menucheckitem');
        var docsels = [];

        var docxstr = '_filter_form_doc_types_menu_';
        Ext.Array.each(docsubs, function(i)
        {
          if(!i.checked) return;

          var j = i.id.indexOf(docxstr);
          if(j != -1)  docsels.push(i.id.substring(j + docxstr.length))
        })

        doctstr.value(docsels.join(','))

        //~: selection set
        var cselset = extjsf.co("${z:vid(localView, 'with-selset-check')}", '${extDom}');
        var wselset = extjsf.bind("${z:vid(localView, 'with-selset-with')}", '${extDom}');
        var nselset = extjsf.bind("${z:vid(localView, 'with-selset-name')}", '${extDom}');

        wselset.value(cselset.pressed)
        nselset.value(!cselset.pressed?(''):(ReTrade.selset.selset))

        extjsf.bind("${z:vid(localView, 'docs_filter_form')}", '${extDom}').submit()
      })

      //]]>
    </script>

    <!-- submit (refresh) button] -->

  </x:form-panel>

  <!-- documents filter form] -->

</ui:component>