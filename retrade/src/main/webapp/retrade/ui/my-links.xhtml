<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${rootView}"/>

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

  <x:root-panel coid = "${z:vid(v, 'my-links-root')}"
    position = "#{rootView.extjsPosition}">

    <f:facet name = "extjs-props">
      title: 'Мои ссылки'
    </f:facet>

    <!-- [area for the tiles] -->
    <x:html coid = "${z:vid(v, 'my-links-html-content')}" table = "false">
      <div id = "${z:vid(v, 'my-links-area')}"
        class = "retrade-tiles-links-area">

        <div class = 'retrade-tiles-links-scroll-right-outer'>
          <div class = 'retrade-tiles-scroll-right'></div>
        </div>
        <div class = 'retrade-tiles-links-scroll-left-outer'>
          <div class = 'retrade-tiles-scroll-left'></div>
        </div>
        <div class = 'retrade-tiles-links-scroll-up-outer'>
          <div class = 'retrade-tiles-scroll-up'></div>
        </div>
        <div class = 'retrade-tiles-links-scroll-down-outer'>
          <div class = 'retrade-tiles-scroll-down'></div>
        </div>
      </div>>
    </x:html>

    <script type = "text/javascript">
    //<![CDATA[

    var DATA = [

     { id: 100, color: 'G', text: 'This is a new world!' },
     { id: 101, color: 'O', text: 'Better to be prepared...' },
     { id: 102, color: 'N', text: 'Simple text' },
     { id: 103, color: 'N', text: 'Take my hand and go on' },
     { id: 104, color: 'N', text: 'This text is so long, it can\'t be inserted in a tiny tile area! Be aware and prepared...' },
     { id: 105, color: 'N', text: 'Let\'s do it together!' },
     { id: 106, color: 'N', text: 'Make it quick!' },
     { id: 107, color: 'N', text: 'Startups forever' },
     { id: 108, color: 'N', text: 'Young I want to be...' },
     { id: 109, color: 'N', text: 'Hare and there, walk over it!' },
     { id: 110, color: 'N', text: 'That is mine' },
     { id: 111, color: 'N', text: 'I want it all, and now' },
     { id: 112, color: 'N', text: 'Here you are: fake' },
     { id: 113, color: 'N', text: 'Phony targets in make' },
     { id: 114, color: 'N', text: 'Lost & found' },
     { id: 115, color: 'N', text: 'Batman Vs Superman' },
     { id: 116, color: 'N', text: 'Fargo' },
     { id: 117, color: 'N', text: 'Walking are not dead' },
     { id: 118, color: 'N', text: 'Better than life' },
     { id: 119, color: 'N', text: 'X-rays for your brains' }

   ]

   extjsf.bind("${z:vid(v, 'my-links-html-content')}", '${rootView.extjsDomain}').
     on('afterrender', function()
   {
     var areaid = '#' + "${z:vid(v, 'my-links-area')}"
     var tileItem, tiles

     function sc(dir)
     {
       return $(areaid + ' .retrade-tiles-links-scroll-' + dir + '-outer')
     }

     function sctoggle()
     {
       var flags = arguments
       ZeT.each(['left', 'right', 'up', 'down'], function(dir, i)
       {
         sc(dir).toggle(!!flags[i])
       })
     }

     function updateAreaInsets()
     {
       var C = 'retrade-tiles-links-column'
       var B = 'retrade-tiles-links-box'

       var w, h, single, same = function()
       {
         if((w != tiles.columns()) || (h != tiles.rows()))
         {
           w = tiles.columns(); h = tiles.rows()
           single = (w == 1); return false
         }

         return true
       }

       //~: turn off area scroll classes
       ZeTD.classes($(areaid)[0], [ '-' + C, '-' + B ])
       sctoggle(false, false, false, false)
       tiles.tiles.updateLayout()
       same() //<-- remember grid size

       //?: {scroll is not needed}
       var none; if(none = tiles.isScollNone())
       {
         tiles.tiles.updateLayout()
         if(same()) return
       }

       var left  = tiles.isScrollLeft()
       var right = tiles.isScrollRight()

       ZeTD.classes($(areaid)[0], [ ((single)?'+':'-') + C, ((single)?'-':'+') + B ])
       sctoggle(!single && left, !single && right, single && left, single && right)
       tiles.tiles.updateLayout()
     }

     function calcRows(r, R)
     {
       return (tiles.columns() == 1)?(R):(r)
     }

     tileItem = new ReTrade.TilesItemExt({
       wrapClass: 'retrade-tile-links-wrap', data: { array: DATA },
       shadow: 'retrade-boshadow-N-XYZ retrade-boshadow-XYZ',
       selectedClass: 'selected'
     })

     tiles = new ReTrade.TilesControl({
       content : tileItem,
       beforejustify: updateAreaInsets,
       scrollInterval: 150,
       tiles : { area: "${z:vid(v, 'my-links-area')}",
         absolute: true, cellClass: 'retrade-tile-cell',
         rows: calcRows, columns: 'min',
         min: [ 180, 90, 100.0, 100.0 ],
         max: [ 245, 160, 100.0, 90.0 ]
       }
     })

     function scbind(dir, left)
     {
       if(ReTrade.isTouch) sc(dir).
         mousedown(ZeT.fbind(tiles.scrollStart, tiles, left, true)).
         mouseup(ZeT.fbind(tiles.scrollStart, tiles, left, false))
       else sc(dir).
         mouseenter(ZeT.fbind(tiles.scrollStart, tiles, left, true)).
         mouseleave(ZeT.fbind(tiles.scrollStart, tiles, left, false))
     }

     scbind('right', false)
     scbind('left', true)
     scbind('up', true)
     scbind('down', false)

     //~: update them on area resize
     extjsf.bind("${z:vid(v, 'my-links-html-content')}", '${rootView.extjsDomain}').
       on('resize', function(html, width, height)
       {
         if(width && height)
           tiles.update()
       })
   })

    //]]>
    </script>
  </x:root-panel>
</ui:define>
</ui:decorate>
</ui:component>
