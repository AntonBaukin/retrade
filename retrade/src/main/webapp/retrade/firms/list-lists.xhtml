<?xml version = '1.0' encoding = 'UTF-8'?>

<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesContractorsListsView}"/>

${v.forceSecure('view: contractors')}
${v.checkModelRequestedWithRedirect}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

  <ui:define name = 'page_body'>

  <x:root-panel coid = "${z:vid(v, 'firms_root')}" position = "#{rootView.extjsPosition}">

    <f:facet name = "extjs-props">
      title: 'Прайс-листы контрагентов'
    </f:facet>


    <!-- [toolbar -->

    <f:facet name = "toolbar-props">
      xtype: 'panel', bodyPadding: extjsf.pt(2),
      layout: {type: 'hbox', align: 'middle'},
      bodyCls: 'retrade-toolbar-inline-panel'
    </f:facet>

    <f:facet name = "toolbar">


      <!-- [change contractors-lists associations] -->

      <x:component coid = "${z:vid(v, 'associate-lists')}">
        <f:facet name = "extjs-props">
          xtype: 'button', text: 'Сопоставить', tooltipType: 'title',
          tooltip: 'Изменить для выбранных контрагентов сопоставленные им прайс-листы'
        </f:facet>
      </x:component>


      <x:component coid = "${z:vid(v, '_tb_fill_0')}">
        <f:facet name = "extjs-props">
          xtype: 'panel', flex: 1, frame: false, border: false,
          bodyCls: 'retrade-toolbar-inline-panel'
        </f:facet>
      </x:component>


      <!-- [filter firms field -->

        <x:text-field coid = "${z:vid(v, 'search-firms')}"
          value = "#{v.model.searchNames}">

          <f:facet name = "extjs-props">
            margin: extjsf.dpts(1, 0, 1, 4),
            width:  extjsf.ex(24)
          </f:facet>

          <f:facet name = "label-props">
            text: 'Поиск', margin: extjsf.pts(1, 0, 1, 8)
          </f:facet>
        </x:text-field>


         <!-- [restrict to selection set] -->

         <x:component coid = "${z:vid(v, 'search-firms-selset')}">
           <f:facet name = "extjs-props">

             xtype: 'button', enableToggle: true,
             width: 30, componentCls: 'retrade-icon-24',
             margin: extjsf.dpts(1, 0, 1, 6),
             iconCls: 'retrade-selset-button-icon',
             tooltipType: 'title', tooltip: 'Ограничить текущей выборкой'

          </f:facet>
        </x:component>


        <x:action-call coid = "${z:vid(v, 'search-firms-script')}"
          action = "#{v.doSearchContractors}">

          <f:facet name = "action-params">
            '${v.modelParam}': '${v.modelKeys}'
          </f:facet>
        </x:action-call>

        <script type = "text/javascript">
        //<![CDATA[

    extjsf.bind("${z:vid(v, 'search-firms')}", '${rootView.extjsDomain}').on('change', function(f)
    {
      var sv = ZeTS.trim(f.getValue());
      if(!f.extjsfBind) return; f.extjsfBind.searchValue = sv;

      var fn = function()
      {
        //?: {search string was changed} discard
        if(f.extjsfBind.searchValue != sv) return;

        var params = { searchNames: sv };
        var selchk = extjsf.bind("${z:vid(v, 'search-firms-selset')}", '${rootView.extjsDomain}').component();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.bindHandler("${z:vid(v, 'search-firms-script')}", '${rootView.extjsDomain}')({
          params: params, success : function() {
            Ext.data.StoreManager.lookup("${z:vid(v, 'contractors')}").loadPage(1)
        }})
      }

      setTimeout(fn, 1000)
    })

    //~: selection set only toggled
    extjsf.bind("${z:vid(v, 'search-firms-selset')}", '${rootView.extjsDomain}').on('toggle', function()
    {
        var names  = extjsf.bind("${z:vid(v, 'search-firms')}", '${rootView.extjsDomain}').value();
        var params = { searchNames: names };

        var selchk = extjsf.bind("${z:vid(v, 'search-firms-selset')}", '${rootView.extjsDomain}').component();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.bindHandler("${z:vid(v, 'search-firms-script')}", '${rootView.extjsDomain}')({
          params: params, success : function() {
             Ext.data.StoreManager.lookup("${z:vid(v, 'contractors')}").loadPage(1)
        }})
    })

        //]]>
        </script>

        <!-- filter firms field] -->

    </f:facet>

    <!-- toolbar] -->


    <!-- [contractors table -->

    <x:data-store storeId = "${z:vid(v, 'contractors')}"
      modelView = "${v}" pageSize = "30">

      <f:facet name = "store-props">
        model: 'retrade.model.FirmPricesView'
      </f:facet>

      <f:facet name = "proxy-props">
        reader: ZeT.defined('retrade.readers.ContractorView')
      </f:facet>
    </x:data-store>

    <x:data-grid coid = "${z:vid(v, 'grid')}" selset = "true"
      storeId = "${z:vid(v, 'contractors')}">

      <f:facet name = "grid-props">

        pager: true, sortableColumns: false, region: 'center',
        selModel: extjsf.delayCreate('Ext.selection.RowModel', { mode: 'MULTI', allowDeselect: true }),
        columns: (function()
        {
          var cols = ZeT.defined('retrade.columns.CatItemView')();
          var clcf = "extjsf.bind('${z:vid(v, 'grid')}', '${rootView.extjsDomain}').priceListClick";

          //~: add price lists display columns
          cols.push({
            text: "Прайс-листы", dataIndex: 'listsKeys',
            sortable: false, flex: 1, renderer: function(v, meta, rec)
            {
              var keys  = v.split(' ');
              var codes = rec.get('listsCodes').split('\t');
              var names = rec.get('listsNames').split('\t');

              ZeT.assert(keys.length == codes.length)
              ZeT.assert(keys.length == names.length)

              var text = '', hint = '';
              for(var i = 0;(i &lt; keys.length);i++)
              {
                if(hint.length) hint += '; ';
                if(text.length) text += '; ';

                hint += ZeTS.cat(codes[i], ' ', names[i]);
                text += ZeTS.cat("&lt;span class='retrade-inline-link' ",
                  'onclick="', clcf, '(event, ', keys[i], ')"',
                  '&gt;', names[i], "&lt;/span&gt;");
              }

              meta.tdAttr = 'title="' + Ext.String.htmlEncode(hint) + '"';
              return text
            }
          })

          return cols
        })()


      </f:facet>
    </x:data-grid>

    <script type = "text/javascript">
    //<![CDATA[

  //~: react on click in the price lists column underlined items
  extjsf.bind("${z:vid(v, 'grid')}", '${rootView.extjsDomain}').priceListClick = function(event, plkey)
  {
    event = Ext.create('Ext.EventObjectImpl', ZeT.assertn(event || window.event));

    var domain  = ZeTS.cat('wnd:', "${z:vid(v, 'price-list-window')}:", plkey);
    var winmain = extjsf.bind('winmain', domain);

    var box     = ReTrade.desktop.calcWindowBox({
      event: event, widthpt: 480, heightpt: 360, '+xpt': -240, '-ypt': -10
    })

    if(winmain)
    {
      winmain.component().toFront()
      winmain.component().setPagePosition(box.x, box.y)
      winmain.component().expand()
      return;
    }

    var params = {
      '${v.viewModeParam}': 'body',
      '${rootView.extjsDomainParam}': domain,
      '${v.entityParam}': plkey
    };

    winmain = extjsf.defineBind('winmain', domain).extjsProps({

      xtype: 'window', title: 'Загрузка...', autoShow: true,
      x: box.x, y: box.y, width: box.width, height: box.height,
      layout: 'fit', collapsible: true,

      loader: {
        url: "${z:url('/go/retrade/price-lists/info')}",
        ajaxOptions: {method: 'GET'},
        autoLoad: true, scripts: true, params: params
      }
    })

    //~: create the window
    winmain.component(Ext.create('Ext.window.Window', winmain.extjsProps()))
  }


  //~: show prices of the clicked contractor
  extjsf.bind("${z:vid(v, 'grid')}", '${rootView.extjsDomain}').
    on('itemdblclick', function(comp, rec, node, row, event)
  {
    var domain  = 'wnd:' + "${z:vid(v, 'view_prices_for_firm')}:" + rec.getId();
    var winmain = extjsf.bind('winmain', domain);

    var box     = ReTrade.desktop.calcWindowBox({
      'event': event, widthpt: 480, heightpt: 360, '-ypt': -16, '+xpt': -240
    })

    if(winmain)
    {
      winmain.component().toFront()
      winmain.component().setPagePosition(box.x, box.y)
      winmain.component().expand()
      return;
    }

    winmain = extjsf.defineBind('winmain', domain).extjsProps({

      xtype: 'window', title: 'Загрузка...',
      x: box.x, y: box.y, width: box.width, height: box.height,
      layout: 'fit', autoShow: true, collapsible: true,

      loader: {
        url: "${z:url('/go/retrade/price-lists/goods-prices-firm')}",
        ajaxOptions: {method: 'GET'},
        autoLoad: true, scripts: true,

        params: {
          '${v.viewModeParam}': 'body',
          '${rootView.extjsDomainParam}': domain,
          '${v.entityParam}': rec.getId()
        }
      }
    })

    winmain.component(Ext.create('Ext.window.Window', winmain.extjsProps()))
  })


  //~: contractor associated price list edit form
  extjsf.bindHandler("${z:vid(v, 'associate-lists')}", '${rootView.extjsDomain}', function(btn, event)
  {
    var domain  = extjsf.tempDomain('wnd:associate-firms-price-lists:');
    var box     = ReTrade.desktop.calcWindowBox({
      'event': event, widthpt: 560, heightpt: 540, '-ypt': -10, '+xpt': -20
    })

    //~: selected contractors
    var s = extjsf.component("${z:vid(v, 'grid')}", '${rootView.extjsDomain}').
      getSelectionModel().getSelection();
    s = Ext.Array.map(s || [], function(i) { return i.getId() })

    //~: create the window
    var winmain = extjsf.defineBind('winmain', domain).extjsProps({

      xtype: 'window', title: 'Загрузка...',
      x: box.x, y: box.y, width: box.width, height: box.height,
      layout: 'fit', autoShow: true, collapsible: true,

      loader: {
        url: "${z:url('/go/retrade/firms/lists-edit')}",
        ajaxOptions: {method: 'GET'},
        autoLoad: true, scripts: true,

        params: {
          '${v.viewModeParam}': 'body',
          '${rootView.extjsDomainParam}': domain,
          contractors: s.join(',')
        }
      }
    })

    //~: reload table on edit done
    winmain.on('close', function()
    {
      if(!winmain.retradeEditDone) return;
      extjsf.component("${z:vid(v, 'contractors')}", '${rootView.extjsDomain}').reload()
    })

    winmain.component(Ext.create('Ext.window.Window', winmain.extjsProps()))
  })

    //]]>
    </script>

    <!-- contractors table] -->

  </x:root-panel>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://tverts.com/retrade/webapp/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "true"/>
  </ui:define>
</ui:decorate>
</ui:component>