<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

<c:set var = "v" scope = "request" value = "${facesFirmsPricesEdit}"/>

${v.checkModelRequestedWithRedirect}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

<x:winmain coid = "${z:vid(v, 'root_panel')}">

  <script type = "text/javascript">
  //<![CDATA[

    extjsf.co('window', '${extDom}').
      setTitle('Сопоставить прайс-листы отобранным контрагентам')

  //]]>
  </script>

  <f:facet name = "extjs-props">
    layout: {type: 'vbox', align: 'stretch'},
    bodyCls: 'retrade-back-panel'
  </f:facet>

  <f:facet name = "toolbar-props">
    xtype: 'panel', bodyPadding: extjsf.pt(2),
    layout: {type: 'hbox', align: 'middle'},
    bodyCls: 'retrade-toolbar-panel'
  </f:facet>

  <!-- [toolbar -->

  <f:facet name = "toolbar">

    <!-- [cancel edit button] -->
    <x:component coid = "${z:vid(v, 'cancel-edit')}">
      <f:facet name = "extjs-props">
        xtype: 'button', text: 'Отмена',
        cls: 'ux-btn-red',

        handler : function()
        {
          extjsf.co('window', '${extDom}').close()
        }
      </f:facet>
    </x:component>


    <x:component coid = "${z:vid(v, '_tb_fill_0')}">
      <f:facet name = "extjs-props">
        xtype: 'panel', flex: 1, frame: false, border: false,
        bodyCls: 'retrade-toolbar-panel'
      </f:facet>
    </x:component>


    <!-- [submit button -->

    <x:component coid = "${z:vid(v, 'submit')}">
      <f:facet name = "extjs-props">
        xtype: 'button', text: 'Сохранить',
        cls: 'ux-btn-green'
      </f:facet>
    </x:component>

    <x:action-call coid = "${z:vid(v, 'submit-script')}"
      action = "#{v.doCommitEdit}" modelView = "${v}"/>

    <script type = "text/javascript">
    //<![CDATA[

    //~: submit the association
    extjsf.handler("${z:vid(v, 'submit')}", '${extDom}', function()
    {
      //~: collect the contractors
      var cst = extjsf.co("${z:vid(v, 'contractors')}", '${extDom}');
      var cs  = []; cst.each(function(i) { cs.push(i.getId()) })
      if(!cs.length) return ReTrade.desktop.error('Добавьте хотя бы одного контрагента!')

      //~: collect the price lists
      var pst = extjsf.co("${z:vid(v, 'priceLists')}", '${extDom}');
      var ps  = []; pst.each(function(i) { ps.push(i.getId()) })
      if(!ps.length) return ReTrade.desktop.error('Добавьте хотя бы один прайс-лист!')

      //~: submit the form
      extjsf.handler("${z:vid(v, 'submit-script')}", '${extDom}')({
          params: { contractors: cs, priceLists: ps }, success: function()
      {
        extjsf.bind('window', '${extDom}').retradeEditDone = true;
        extjsf.co('window', '${extDom}').close()
      }})
    })

    //]]>
    </script>

    <!-- submit button] -->

  </f:facet>

  <!-- toolbar] -->
  

  <!-- [upper content: firms and lists layout -->

  <x:component coid = "${z:vid(v, '_firms_lists_layout')}">

    <f:facet name = "extjs-props">
      flex: 2, border: false,
      bodyCls: 'retrade-transparent-panel',
      layout: {type: 'hbox', align: 'stretch'}
    </f:facet>


    <!-- [contractors -->

    <x:component coid = "${z:vid(v, '_firms_content')}">
      <f:facet name = "extjs-props">
        flex: 1, border: false, layout: 'fit',
        margin: extjsf.pts(0, 1, 0, 0),
        bodyCls: 'retrade-back-panel'
      </f:facet>


      <!-- [contractors toolbar -->

      <x:toolbar coid = "${z:vid(v, 'firms_content_toolbar')}">
        <f:facet name = "extjs-props">
          xtype: 'panel',
          bodyPadding: extjsf.pts(2, 2, 2, 0),
          layout: {type: 'hbox', align: 'middle'},
          bodyCls: 'retrade-toolbar-title-panel'
        </f:facet>


        <!-- [header-like title] -->
        <x:component coid = "${z:vid(v, 'firms_toolbar_title')}">
          <f:facet name = "extjs-props">
            xtype: 'title', text: 'Контрагенты',
            cls: 'retrade-toolbar-inline-title'
          </f:facet>
        </x:component>


        <x:component coid = "${z:vid(v, '_firms_toolbar_fill')}">
          <f:facet name = "extjs-props">
            xtype: 'panel', flex: 1, frame: false, border: false,
            bodyCls: 'retrade-toolbar-panel'
          </f:facet>
        </x:component>


        <!-- [delete contractors button] -->
        <x:component coid = "${z:vid(v, 'delete-firms')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-icon-strict-24 retrade-button-del',
            tooltipType: 'title', tooltip: 'Удалить из таблицы выбранные контрагенты',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height
          </f:facet>
        </x:component>


        <!-- [add contractors button] -->
        <x:component coid = "${z:vid(v, 'add-firms')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-icon-strict-24 retrade-button-add',
            tooltipType: 'title', tooltip: 'Добавить контрагенты из текущей выборки',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height,
            margin: extjsf.pts(0, 0, 0, 8)
          </f:facet>
        </x:component>
      </x:toolbar>

      <!-- contractors toolbar] -->


      <!-- [contractors table -->

      <x:data-store storeId = "${z:vid(v, 'contractors')}"
        modelView = "${v}" modelRequest = "contractors">

        <f:facet name = "store-props">
          model: 'retrade.model.ContractorView'
        </f:facet>

        <f:facet name = "proxy-props">
          reader: ZeT.defined('retrade.readers.ContractorView')
        </f:facet>
      </x:data-store>

      <x:data-grid coid = "${z:vid(v, 'cgrid')}"
        storeId = "${z:vid(v, 'contractors')}">

        <f:facet name = "grid-props">

          columns: ZeT.defined('retrade.columns.ContractorView'),
          hideHeaders: true, border: false, sortableColumns: false, region: 'center',
          selModel: extjsf.delayCreate('Ext.selection.RowModel', { mode: 'MULTI', allowDeselect: true })

        </f:facet>
      </x:data-grid>

      <!-- contractors table] -->
      

      <x:action-call coid = "${z:vid(v, 'delete-firms-script')}"
        action = "#{v.doDeleteContractors}" modelView = "${v}"/>

      <x:action-call coid = "${z:vid(v, 'add-firms-script')}"
        action = "#{v.doAddContractors}" modelView = "${v}"/>


      <script type = "text/javascript">
      //<![CDATA[

      //~: delete the selected contractors button
      extjsf.handler("${z:vid(v, 'delete-firms')}", '${extDom}', function()
      {
        var g = extjsf.co("${z:vid(v, 'cgrid')}", '${extDom}');

        //~: selected contractors
        var s = g.getSelectionModel().getSelection();
        if(!s || !s.length) return

        //~: project the ids
        var ids = Ext.Array.map(s, function(i) { return i.getId() })

        //~: remove the items on the server side
        extjsf.handler("${z:vid(v, 'delete-firms-script')}", '${extDom}')({
          params: { contractors: ids }})

        //~: remove from the store
        g.getStore().remove(s)
      })

      //~: delete the selected contractors button
      extjsf.handler("${z:vid(v, 'add-firms')}", '${extDom}', function()
      {
        extjsf.handler("${z:vid(v, 'add-firms-script')}", '${extDom}')({
          params: { selset: ReTrade.selset.selset }, success: function()
        {
          extjsf.co("${z:vid(v, 'contractors')}", '${extDom}').reload()
        }})
      })

      //~: react on grid delete key
      extjsf.bind("${z:vid(v, 'cgrid')}", '${extDom}').on('added', function(grid)
      {
        grid.getView().on('itemkeydown', function(view, record, item, index, e)
        {
          //?: {delete | backspace}
          if((e.getKey() == e.DELETE) || (e.getKey() == e.BACKSPACE))
            extjsf.handler("${z:vid(v, 'delete-firms')}", '${extDom}')()
        })
      })

      //]]>
      </script>

    </x:component>

    <!-- contractors] -->


    <!-- [price lists -->

    <x:component coid = "${z:vid(v, '_lists_content')}">
      <f:facet name = "extjs-props">
        flex: 1, border: false, layout: 'fit',
        margin: extjsf.pts(0, 0, 0, 1),
        bodyCls: 'retrade-back-panel'
      </f:facet>


      <!-- [price lists toolbar -->

      <x:toolbar coid = "${z:vid(v, 'lists_content_toolbar')}">
        <f:facet name = "extjs-props">
          xtype: 'panel',
          bodyPadding: extjsf.pts(2, 2, 2, 0),
          layout: {type: 'hbox', align: 'middle'},
          bodyCls: 'retrade-toolbar-title-panel'
        </f:facet>


        <!-- [header-like title] -->
        <x:component coid = "${z:vid(v, 'lists_toolbar_title')}">
          <f:facet name = "extjs-props">
            xtype: 'title', text: 'Прайс листы',
            cls: 'retrade-toolbar-inline-title'
          </f:facet>
        </x:component>


        <x:component coid = "${z:vid(v, '_lists_toolbar_fill')}">
          <f:facet name = "extjs-props">
            xtype: 'panel', flex: 1, frame: false, border: false,
            bodyCls: 'retrade-toolbar-panel'
          </f:facet>
        </x:component>


        <!-- [delete lists button] -->
        <x:component coid = "${z:vid(v, 'delete-lists')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-icon-strict-24 retrade-button-del',
            tooltipType: 'title', tooltip: 'Удалить из таблицы выбранные прайс-листы',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height
          </f:facet>
        </x:component>

        <!-- [move list up] -->
        <x:component coid = "${z:vid(v, 'lists-up')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-button-up',
            tooltipType: 'title', tooltip: 'Переместить выбранные прайс-листы вверх',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height,
            margin: extjsf.pts(0, 0, 0, 8)
          </f:facet>
        </x:component>


        <!-- [move list down] -->
        <x:component coid = "${z:vid(v, 'lists-down')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-button-down',
            tooltipType: 'title', tooltip: 'Переместить выбранные прайс-листы вниз',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height,
            margin: extjsf.pts(0, 0, 0, 8)
          </f:facet>
        </x:component>


        <!-- [add lists button]-->
        <x:component coid = "${z:vid(v, 'add-lists')}">
          <f:facet name = "extjs-props">
            xtype: 'button', iconCls: 'retrade-icon-strict-24 retrade-button-add',
            tooltipType: 'title', tooltip: 'Добавить прайс-листы из текущей выборки',
            width: retrade_default('button-square').width,
            height: retrade_default('button-square').height,
            margin: extjsf.pts(0, 0, 0, 8)
          </f:facet>
        </x:component>
      </x:toolbar>

      <!-- price lists toolbar] -->


      <!-- [price lists table -->

      <x:data-store storeId = "${z:vid(v, 'priceLists')}"
        modelView = "${v}" modelRequest = "price-lists">

        <f:facet name = "store-props">
          model: 'retrade.model.CatItemView'
        </f:facet>

        <f:facet name = "proxy-props">
          reader: ZeT.defined('retrade.readers.PriceListView')
        </f:facet>
      </x:data-store>

      <x:data-grid coid = "${z:vid(v, 'plgrid')}"
        storeId = "${z:vid(v, 'priceLists')}">

        <f:facet name = "grid-props">

          columns: ZeT.defined('retrade.columns.CatItemView'),
          sortableColumns: false, border: false, region: 'center', hideHeaders: true,
          selModel: extjsf.delayCreate('Ext.selection.RowModel', { mode: 'SINGLE', allowDeselect: true })

        </f:facet>
      </x:data-grid>

      <!-- price lists table] -->


      <x:action-call coid = "${z:vid(v, 'assign-lists-script')}"
        action = "#{v.doAssignPriceLists}" modelView = "${v}"/>

      <x:action-call coid = "${z:vid(v, 'add-lists-script')}"
        action = "#{v.doAddPriceLists}" modelView = "${v}"/>
      
      <script type = "text/javascript">
      //<![CDATA[

      //~: delete the selected price lists button
      extjsf.handler("${z:vid(v, 'delete-lists')}", '${extDom}', function()
      {
        var g = extjsf.co("${z:vid(v, 'plgrid')}", '${extDom}');

        //~: selected price lists
        var s = g.getSelectionModel().getSelection();
        if(!s || !s.length) return

        //~: remove from the store
        g.getStore().remove(s)

        //~: project the ids
        var ids = []; g.getStore().each(function(i) { ids.push(i.getId()) })

        //~: assign the items on the server side
        extjsf.handler("${z:vid(v, 'assign-lists-script')}", '${extDom}')({
          params: { priceLists: ids }, success: function()
          {
            extjsf.co("${z:vid(v, 'goods')}", '${extDom}').reload()
          }})
      })

      //~: delete the selected price lists button
      extjsf.handler("${z:vid(v, 'add-lists')}", '${extDom}', function()
      {
        extjsf.handler("${z:vid(v, 'add-lists-script')}", '${extDom}')({
          params: { selset: ReTrade.selset.selset }, success: function()
        {
          extjsf.co("${z:vid(v, 'priceLists')}", '${extDom}').reload()
          extjsf.co("${z:vid(v, 'goods')}", '${extDom}').reload()
        }})
      })

      //~: move price-lists up
      extjsf.handler("${z:vid(v, 'lists-up')}", '${extDom}', function()
      {
        extjsf.u.moveGridSel(true,
          extjsf.co("${z:vid(v, 'plgrid')}", '${extDom}'),
          function(g)
        {
          //~: collect all the ids
          var ids = []; g.getStore().each(function(i) { ids.push(i.getId()) })

          //~: post to the server
          extjsf.handler("${z:vid(v, 'assign-lists-script')}", '${extDom}')({
            params: { priceLists: ids }, success : function()
          {
            extjsf.co("${z:vid(v, 'goods')}", '${extDom}').reload()
          }})
        })
      })

      //~: move price-lists down
      extjsf.handler("${z:vid(v, 'lists-down')}", '${extDom}', function()
      {
        extjsf.u.moveGridSel(false,
          extjsf.co("${z:vid(v, 'plgrid')}", '${extDom}'),
          function(g)
        {
          //~: collect all the ids
          var ids = []; g.getStore().each(function(i) { ids.push(i.getId()) })

          //~: post to the server
          extjsf.handler("${z:vid(v, 'assign-lists-script')}", '${extDom}')({
            params: { priceLists: ids }, success : function()
          {
            extjsf.co("${z:vid(v, 'goods')}", '${extDom}').reload()
          }})
        })
      })

      //~: react on grid delete key
      extjsf.bind("${z:vid(v, 'plgrid')}", '${extDom}').on('added', function(grid)
      {
        grid.getView().on('itemkeydown', function(view, record, item, index, e)
        {
          //?: {delete | backspace}
          if((e.getKey() == e.DELETE) || (e.getKey() == e.BACKSPACE))
            extjsf.handler("${z:vid(v, 'delete-lists')}", '${extDom}')()
        })
      })

      //]]>
      </script>

    </x:component>

    <!-- price lists] -->

  </x:component>

  <!-- upper content: firms and lists layout] -->


  <!-- [lower content: goods -->

  <x:component coid = "${z:vid(v, 'goods-content')}">
    <f:facet name = "extjs-props">
      layout: 'fit', flex: 5, frame: false, border: false,
      bodyCls: 'retrade-transparent-panel',
      margin: extjsf.pts(2, 0, 0, 0)
    </f:facet>


    <!-- [goods table toolbar -->

    <x:toolbar coid = "${z:vid(v, 'goods_toolbar')}">
      <f:facet name = "extjs-props">
        xtype: 'panel',
        bodyPadding: extjsf.pts(2, 2, 2, 0),
        layout: {type: 'hbox', align: 'middle'},
        bodyCls: 'retrade-toolbar-title-panel'
      </f:facet>


      <!-- [header-like title] -->
      <x:component coid = "${z:vid(v, 'goods_toolbar_title')}">
        <f:facet name = "extjs-props">
          xtype: 'title', text: 'Цены товаров',
          cls: 'retrade-toolbar-inline-title'
        </f:facet>
      </x:component>


      <x:component coid = "${z:vid(v, '_goods_tb_fill_0')}">
        <f:facet name = "extjs-props">
          xtype: 'panel', flex: 1, frame: false, border: false,
          bodyCls: 'retrade-toolbar-inline-panel'
        </f:facet>
      </x:component>


      <!-- [filter goods field -->

      <x:text-field coid = "${z:vid(v, 'search-goods')}"
        value = "#{v.model.searchNames}">

        <f:facet name = "extjs-props">
          margin: extjsf.pts(1, 0, 1, 4),
          width:  extjsf.ex(24)
        </f:facet>

        <f:facet name = "label-props">
          text: 'Поиск', margin: extjsf.pts(1, 0, 1, 8)
        </f:facet>
      </x:text-field>

      <!-- [restrict to selection set] -->

      <x:component coid = "${z:vid(v, 'search-goods-selset')}">
        <f:facet name = "extjs-props">

          xtype: 'button', enableToggle: true,
          width: retrade_default('button-selset').width,
          height: retrade_default('button-selset').height,
          componentCls: 'retrade-icon-24',
          margin: extjsf.pts(1, 0, 1, 6),
          iconCls: 'retrade-selset-button-icon',
          tooltipType: 'title', tooltip: 'Ограничить текущей выборкой'

        </f:facet>
      </x:component>


      <x:action-call coid = "${z:vid(v, 'search-goods-script')}"
        action = "#{v.doSearchGoods}" modelView = "${v}"/>

      <script type = "text/javascript">
      //<![CDATA[

    extjsf.bind("${z:vid(v, 'search-goods')}", '${extDom}').on('change', function(f)
    {
      var sv = ZeTS.trim(f.getValue());
      if(!f.extjsfBind) return; f.extjsfBind.searchValue = sv;

      var fn = function()
      {
        //?: {search string was changed} discard
        if(f.extjsfBind.searchValue != sv) return;

        var params = { searchGoods: sv };
        var selchk = extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${extDom}').co();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.handler("${z:vid(v, 'search-goods-script')}", '${extDom}')({
          params: params, success : function()
        {
            extjsf.co("${z:vid(v, 'goods')}", '${extDom}').loadPage(1)
        }})
      }

      setTimeout(fn, 1000)
    })

    //~: selection set only toggled
    extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${extDom}').on('toggle', function()
    {
        var names  = extjsf.bind("${z:vid(v, 'search-goods')}", '${extDom}').value();
        var params = { searchGoods: names };

        var selchk = extjsf.bind("${z:vid(v, 'search-goods-selset')}", '${extDom}').co();
        if(selchk.pressed) params.selset = ReTrade.selset.selset;

        extjsf.handler("${z:vid(v, 'search-goods-script')}", '${extDom}')({
          params: params, success : function()
        {
          extjsf.co("${z:vid(v, 'goods')}", '${extDom}').loadPage(1)
        }})
    })

      //]]>
      </script>

      <!-- filter goods field] -->

    </x:toolbar>

    <!-- goods table toolbar] -->


    <!-- [goods table -->

    <x:data-store storeId = "${z:vid(v, 'goods')}"
      modelView = "${v}" modelRequest = "goods">

      <f:facet name = "store-props">
        model: 'retrade.model.GoodPriceView', remoteSort: true,
        sorters: [{ property: 'goodName', direction: 'ASC' }]
      </f:facet>

      <f:facet name = "proxy-props">
        reader: ZeT.defined('retrade.readers.GoodUnitView')
      </f:facet>
    </x:data-store>

    <x:data-grid coid = "${z:vid(v, 'ggrid')}" selset = "true"
      storeId = "${z:vid(v, 'goods')}">

      <f:facet name = "grid-props">
        pager: true, sortableColumns: true,
        columns: ZeT.defined('retrade.columns.ClientGoodPriceView'),
        selModel: extjsf.delayCreate('Ext.ux.selection.No')
      </f:facet>
    </x:data-grid>

    <!-- goods table] -->

  </x:component>

  <!-- lower content: goods] -->

</x:winmain>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://extjs.jsf.java.net/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "true"/>
  </ui:define>
</ui:decorate>
</ui:component>