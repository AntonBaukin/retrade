<ui:component xmlns:ui = 'http://java.sun.com/jsf/facelets'
  xmlns:c  = 'http://java.sun.com/jsp/jstl/core'
  xmlns:f  = 'http://java.sun.com/jsf/core'
  xmlns:z  = 'uri:tverts.com'>

  <c:set var = "v" scope = "request" value = "${facesSystemSelfShuntView}"/>

  ${v.checkModelRequested}

<ui:decorate template = '/resources/.view-modes/body.xhtml'
   xmlns    = 'http://www.w3.org/1999/xhtml'
   xmlns:h  = 'http://java.sun.com/jsf/html'
   xmlns:x  = 'http://java.sun.com/jsf/composite/.xhtml'>

<ui:define name = 'page_body'>

<x:winmain coid = "${z:vid(v, 'root_panel')}">

  <script type = "text/javascript">

    extjsf.bind('winmain', '${extDom}').
      co().setTitle('${z:jss(v.logWindowTitle)}')

  </script>

  <!-- [toolbar -->

  <f:facet name = "toolbar-props">
    xtype: 'panel', bodyPadding: extjsf.pt(2),
    layout: {type: 'hbox', align: 'middle'},
    bodyCls: 'retrade-toolbar-inline-panel'
  </f:facet>

  <f:facet name = "toolbar">

    <!-- [close window button -->

    <x:component coid = "${z:vid(v, 'close_window')}">
      <f:facet name = "extjs-props">
        xtype: 'button', text: 'Закрыть',

        handler : function()
        {
          var cmp = extjsf.bind('winmain', '${extDom}').co();
          cmp.findParentByType('panel').remove(cmp, true)
        }

      </f:facet>
    </x:component>

    <!-- close window button] -->

  </f:facet>

  <!-- toolbar] -->


  <!-- [self-shunt log -->

  <x:html coid = "${z:vid(v, 'self-shunt-log-layout')}">

    <f:facet name = "extjs-props">
      region: 'center', cls: 'retrade-text-panel'
    </f:facet>

    <div id = "${z:vid(v, 'self-shunt-log-wait')}"
      class = "retrade-create-domain-log-wait-msg">

     Ожидайте завершения тестирования...

    </div>

    <div id = "${z:vid(v, 'self-shunt-log-text')}"
      class = "retrade-create-domain-log-text" style = "display: none">
    </div>

  </x:html>

  <x:action-call coid = "${z:vid(v, 'get-self-shunt-log')}"
    action = "#{v.doGetSelfShuntLog}" modelView = "${v}"/>

  <script type = "text/javascript">
  //<![CDATA[

  extjsf.bind("${z:vid(v, 'get-self-shunt-log')}", '${extDom}').updateSelfShuntLog = function()
  {
      var script = extjsf.bind("${z:vid(v, 'get-self-shunt-log')}", '${extDom}');
      if(!script) return;                       //<-- the window is closed
      if(script.updated_self_shunt_log) return; //<-- already updated the script

      //?: {still has no log} ask again
      if(!script.SHUNT_LOG)
      {
          ZeT.timeout(4000, script.handler)
          return;
      }

      //~: mark as updated
      script.updated_self_shunt_log = true;

      //~: set the log
      Ext.getDom("${z:vid(v, 'self-shunt-log-text')}").innerHTML =
        script.SHUNT_LOG.split('\n').join('<br/>');
      delete script.SHUNT_LOG

      //~: display
      Ext.get("${z:vid(v, 'self-shunt-log-wait')}").hide()
      Ext.get("${z:vid(v, 'self-shunt-log-text')}").show()
  }

  Ext.onReady(extjsf.bind("${z:vid(v, 'get-self-shunt-log')}", '${extDom}').updateSelfShuntLog)

  //]]>
  </script>

  <!-- self-shunt log] -->


</x:winmain>
</ui:define>
</ui:decorate>

<ui:decorate template = '/resources/.view-modes/body_post.xhtml'
   xmlns    = 'http://extjs.jsf.java.net/response'
   xmlns:ui = 'http://java.sun.com/jsf/facelets'>

  <ui:define name = 'validation'>
    <validation success = "true"/>
  </ui:define>

  <ui:define name = 'scripts'>

   <ui:fragment rendered = "#{empty v.selfShuntLog}">
      <script>
      //<![CDATA[

(function()
{
  var script = extjsf.bind("${z:vid(v, 'get-self-shunt-log')}", '${extDom}');
  if(!script) return; //<-- the window is closed
  script.updateSelfShuntLog()

})()

      //]]>
      </script>
    </ui:fragment>

    <ui:fragment rendered = "#{not empty v.selfShuntLog}">
      <script>
      //<![CDATA[

(function()
{
  var script = extjsf.bind("${z:vid(v, 'get-self-shunt-log')}", '${extDom}');
  if(!script) return; //<-- the window is closed

  script.SHUNT_LOG = "#{z:jss(v.selfShuntLog)}";
  script.updateSelfShuntLog()

})()

      //]]>
      </script>
    </ui:fragment>
  </ui:define>

</ui:decorate>
</ui:component>